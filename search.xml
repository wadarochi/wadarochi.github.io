<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Boost threads unavailable on this platform</title>
    <url>/2012/10/15/Boost-threads-unavailable-on-this-platform/</url>
    <content><![CDATA[<p>在Ubuntu 11.04平台编译GNU Radio第三方的gr-chancoding模块时，出现了这个莫名的错误。主要的错误信息有：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: #error &quot;Threading support unavaliable: it has been explicitly disabled with BOOST_DISABLE_THREADS&quot;</span><br><span class="line">Error: #error &quot;Sorry, no boost threads are available for this platform.&quot;</span><br><span class="line">Error: #error &quot;Boost threads unavailable on this platform&quot;</span><br></pre></td></tr></table></figure>

<p>当时我就错愕了，Ubuntu在不济，也不至于改到失去Boost的线程能力吧…肯定是我打开的方法错了。</p>
<p>Google搜索标题所示的错误信息之后，看到了这个链接：<a href="http://blog.pinepara.info/tech/compile-passenger-with-gcc-4-dot-7/">使用 GCC 4.7 编译 Passenger</a>得到如下解释：</p>
<blockquote>
<p>根据其提供的信息显示该BUG出现的原因是GCC 4.6之前都定义了GLIBCXX_HAVE_GTHR_DEFAULT，而 GCC 4.7 之后改为定义_GLIBCXX_HAS_GTHREADS。这个改动破坏了Boost代码中的判断逻辑，从而错误的定义了 BOOST_DISABLE_THREADS，而非 BOOST_HAS_THREADS。</p>
</blockquote>
<p>此刻才恍然大悟，之前为了体验C++11各种特性，在这台Ubuntu 11.04上通过launchpad源安装了GCC 4.7，导致了Boost傲娇…</p>
<p>于是，用update-alternatives把g++改回4.5，一切就正常了。</p>
]]></content>
      <tags>
        <tag>C_C++</tag>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU screen encoding的替代品，自制BBS转码脚本</title>
    <url>/2011/05/24/GNU-screen-encoding%E7%9A%84%E6%9B%BF%E4%BB%A3%E5%93%81%EF%BC%8C%E8%87%AA%E5%88%B6BBS%E8%BD%AC%E7%A0%81%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>之前一直想从screen迁移到tmux上来，因为后者相比较前者而言对脚本的支持更好，我可以轻松的将常用的几个窗口(window)打包成一个会话(session)，然后可以轻松的在一个脚本中将整个会话启动。但是一直下不定决心，因为screen有encoding功能，而tmux没有：</p>
<blockquote>
<p>encoding enc [enc]</p>
<p>Tell&#160; screen&#160; how&#160; to&#160; interpret&#160; the&#160; input&#x2F;output. The first argument sets the<br>encoding of the current window. Each window can emulate&#160; a&#160; different&#160; encoding.<br>The optional second parameter overwrites the encoding of the connected terminal.<br>It should never be needed as screen uses the locale setting to detect the encod‐<br>ing.&#160;&#160; There is also a way to select a terminal encoding depending on the termi‐<br>nal type by using the &quot;KJ&quot; termcap entry.</p>
<p>Supported encodings are eucJP, SJIS, eucKR, eucCN, Big5,&#160; GBK,&#160; KOI8-R,&#160; CP1251,<br>UTF-8,&#160;&#160; ISO8859-2,&#160;&#160; ISO8859-3,&#160; ISO8859-4,&#160; ISO8859-5,&#160; ISO8859-6,&#160; ISO8859-7,<br>ISO8859-8, ISO8859-9, ISO8859-10, ISO8859-15, jis.</p>
<p>See also &quot;defencoding&quot;, which changes the default setting of a new window.  </p>
</blockquote>
<p>简言之，encoding可以让你为不同的窗口(window)设置不同的字符集编码(charset)，并根据你的设定自动进行编码转换(当然，并不仅限于此，后面会细说)，对于我们这些使用Linux服务器在天朝教育网挂各大BBS站的同学而言，这个功能是十分重要的，因为大陆的BBS都是GBK编码的(据我所知是这样的)，但是自己的Linux服务器的系统locale一般都是UTF-8，以前曾经写过一些screen后台挂站的文章：</p>
<ol>
<li><a href="http://bbs.seu.edu.cn/bbsanc.php?p=22-4-10-5">[FAQ]控制台下登陆BBS</a>2.  <a href="http://bbs.seu.edu.cn/bbsanc.php?p=22-4-10-23">CLI环境之BBS攻略</a></li>
</ol>
<p>有同学可能要说了，如果要转码的话，用luit不就行了？比如&#96;&#96;luit –encoding GBK ssh –1 <a href="mailto:guest@bbs.seu.edu.cn&rsquo;&rsquo;">guest@bbs.seu.edu.cn’’</a>，单纯从转码的角度来说，luit确实是足够强劲了，这里先岔开来介绍一下luit:</p>
<blockquote>
<p>Luit&#160; is&#160; a&#160; filter that can be run between an arbitrary application and a UTF-8 terminal emulator.&#160; It will convert application output from the locale’s&#160; encoding&#160; into&#160; UTF-8, and convert terminal input from UTF-8 into the locale’s encoding.  </p>
</blockquote>
<p>但是，luit在putty和gnome-terminal下面处理ASCII艺术(ASCII art or ANSI art)的时候是让人失望的，比如如下两幅截图：</p>
<p><a href="http://lh6.ggpht.com/_5Si8_iQ2HPI/TdvCU5a7bUI/AAAAAAAAAGI/JgMtEn4V8mk/s1600-h/luit%5B44%5D.png"><img src="http://lh6.ggpht.com/_5Si8_iQ2HPI/TdvCVkAA4BI/AAAAAAAAAGM/yTOMfOe-8Sc/luit_thumb%5B42%5D.png?imgmax=800" alt="View BBS through luit" title="View BBS through luit"></a><a href="http://lh6.ggpht.com/_5Si8_iQ2HPI/TdvCXIwGLjI/AAAAAAAAAGQ/PSSG1d8OZvY/s1600-h/screen%5B3%5D.png"><img src="http://lh3.ggpht.com/_5Si8_iQ2HPI/TdvCYNgzo1I/AAAAAAAAAGU/xPWu2J34j5E/screen_thumb%5B1%5D.png?imgmax=800" alt="View BBS through screen" title="View BBS through screen"></a></p>
<p>左图是用luit登陆BBS时的惨状，右图是使用screen登陆BBS时的美景，真是对比出差距，不服不行啊……</p>
<p>其实我一开始也纳闷，按道理这两软件在对问题的处理上，都是先打开两个PTY，一个是对子程序的，以后是输出给用户的，然后自己通过在中间倒腾数据的时候做了相应的转码，怎么差距这么大呢……原来是screen在处理这些图形字符(line drawing characters)的时候，人为的给每个图形字符后面加了一个空格(有兴趣的同学可以翻翻screen的源代码，真相在encoding.c这个文件的recode_char_dw函数中；或者自己抓包看看)，所以图形变美观了。至于为什么要交空格，这个要涉及到GBK编码的字符宽度问题，本来这些图形字符在GBK中应该是和汉字等宽的，结果转UTF-8之后变得和英文字母等宽了，要是不补这个空格的话就会和luit一样乱套了，所以前面说screen干的不仅仅局限在狭义的转字符集编码，还把这个问题也考虑进去了。</p>
<p>好了，这么一说，screen太牛了，就算原生脚本支持不太好，用shell脚本(参见：<a href="http://stackoverflow.com/questions/899609/gnu-screen-run-script-that-sends-commands-to-the-screen-session-it-is-being-run">Run script that sends commands to the screen session it is being run in</a>)凑合一下也行啊，可惜screen在encoding上有一个bug，当你想设置encoding之后的窗口中输入图形字符(比如&#96;&#96;※’’)的时候，这个符号会变成两个问号??，这可把我郁闷坏了，之前忍了好久了……其实这个bug在07年得时候就有人提交了，但是screen官方一直没动静，我翻了翻源代码，问题应该是处在encoding.c文件中的WinSwitchEncoding函数中，里面对字符宽度的计算出了问题，直接把这类图形字符变成了两个问号??，有兴趣的同学修改一下交给patch给开发者吧，功德无量啊~~</p>
<p>有了“变问号”和“原生脚本支持不足”这两点，已经足够让人又造轮子的打算了。不过我写这个工具之前还是用Google搜了一遍，确保没有重复的造轮子，用了如下关键词：<code>screen tmux encoding’’，</code>luit encoding tmux’’，&#96;&#96;BBS ANSI tmux’’等等等等。</p>
<p>确实没有找到现成的轮子，然后我就用python写了这个工具(里面包含了pexpect_ng.py文件，从pexpect修改而来)，里面对图形字符的处理和screen一样，用正则表达式在每个图形字符之后加一个空格；名字现在叫做seu_bbs，但是其实把seu_bbs.py这个文件中第159行的<code>bbs.seu.edu.cn’’改成你喜欢的BBS域名比如</code>bbs.newsmth.org’’，用来登陆任何华语BBS应该是不成问题的。文件打包在这里：<a href="http://bbs.seu.edu.cn/bbscon.php?bid=22&amp;id=41059">seu_bbs.py 0.3版 &lt;挂站必备工具&gt;</a>，里面也有一些介绍，这里不罗嗦了，贴一下。.&#x2F;seu_bbs.py -h的输出：</p>
<blockquote>
<p>usage: seu_bbs.py [-h] [-a] [-e CHARSET] [-u USERNAME] [-t TIMEOUT] [-v]</p>
<p>convert charset of BBS to locale</p>
<p>optional arguments:<br>&#160; -h, –help&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; show this help message and exit<br>&#160; -a&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; whether or not seu_bbs.py take whole window.[default<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; disable]<br>&#160; -e CHARSET, –encoding CHARSET<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Set up seu_bbs.py to use CHARSET encoding.[default<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; GB18030]<br>&#160; -u USERNAME, –username USERNAME<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Set up seu_bbs.py to use USERNAME login bbs.[default<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; guest]<br>&#160; -t TIMEOUT, –timeout TIMEOUT<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Do someting when idle(unit is seconds, negtive value<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; will be ignored).[default -1]<br>&#160; -v, –version  </p>
</blockquote>
<p>这个工具目前还是有一些问题的，在从BBS的GBK转码为UTF-8的过程中，个别字符序列会转换不成功，我还没有详细的去调试到底是什么字符(估计是控制字符或者图形字符)导致转码失败，不过python内置的unicode函数倒是可以比较漂亮的忽略这个别转码错误，所以暂时就不管了，以后有时间再说吧。同时这个脚本的存在可以取代以往使用expect进行挂站，所以是完全的绿色版啊(除了需要python版本新于2.3以外)</p>
<p>最后要在赞一下pexpect模块的作者，代码的可读性太棒了！</p>
<p>btw:关于screen和tmux的比较，有两篇文章已经讲的很好了：</p>
<ol>
<li><a href="http://linuxtoy.org/archives/from-screen-to-tmux.html">[LinuxTOY]从 screen 切换到 tmux</a>2.  <a href="http://www.wikivs.com/wiki/Screen_vs_tmux">Screen vs tmux</a></li>
</ol>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>BBS</tag>
      </tags>
  </entry>
  <entry>
    <title>Real-time Mantra -- 值得收藏的通信类文档</title>
    <url>/2012/01/28/Real-time-Mantra-%E5%80%BC%E5%BE%97%E6%94%B6%E8%97%8F%E7%9A%84%E9%80%9A%E4%BF%A1%E7%B1%BB%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>我一直觉得Event Studio的开发者们是一票活雷锋，不管是他们那O疼的水印(往矢量图中打水印，亲！你们都是人才)，还是他们的<a href="http://www.eventhelix.com/RealtimeMantra/">Real-time Mantra</a>。所谓<a href="http://rrurl.cn/cMNegR">Real-time Mantra</a>其实是如下一系列文档的集合(大部分是可供匿名下载的pdf，剩下的是在线HTML文档)：</p>
<ul>
<li>TCP&#x2F;IP Sequence Diagrams</li>
<li>Telecom Call Flows</li>
<li>IMS Call Flows</li>
<li>Embedded Object Oriented Design</li>
<li>Design Patterns</li>
<li>Real-time Software Design Basics</li>
<li>Fault Handling</li>
<li>Congestion Control</li>
<li>System Design Examples</li>
<li>Long Term Evolution (LTE)</li>
</ul>
<span id="more"></span>
<p>Tutorials给个截图吧(TCP&#x2F;IP Sequence Diagrams中的<span style="font-size: 10.0pt;">FTP Sequence Diagram</span>，第一页)：</p>
<div class="separator" style="clear: both; text-align: center;">[![](/img/FTP_Diagram_small.PNG)](/img/FTP_Diagram.PNG)</div>通过这个截图，你可以非常直观的理解FTP协议中客户端登陆到服务器端的流程，比直接闷头去读[RFC&nbsp; 959](http://www.w3.org/Protocols/rfc959/)好多了吧;)。活雷锋们收集的LTE教程更是至宝，最难能可贵的是，这些文档不仅被巧妙的组织到一块，同时还配以简短的摘要和预览图，包含Freescale,  Ericsson,  Motorola等一票公司和普度等大学的公开文档，找工作之前我一定要好好翻翻。当然，这些文档最重要的意义不仅仅是普及这些知识，而是教给你：什么样的文档才是好文档！什么样的图才是好图！
<div class="separator" style="clear: both; text-align: center;">[![](/img/ofdm-scfdma-signal-chains-small.jpg)](/img/ofdm-scfdma-signal-chains.jpg)</div>
<div class="separator" style="clear: both; text-align: center;">[![](/img/lte-protocol-stack-small.jpg)](/img/lte-protocol-stack.jpg)</div>
]]></content>
      <tags>
        <tag>communication</tag>
      </tags>
  </entry>
  <entry>
    <title>Use Firefox and Chromium in pure ipv6 environment</title>
    <url>/2011/10/11/Use-Firefox-and-Chromium-in-pure-ipv6-environment/</url>
    <content><![CDATA[<p>因为鄙校奇特的上网方式，在不用代理的情况下，每位同学同一时间只能使用一个vpn账号在一台电脑上连接外网，所以我想在某些电脑上直接使用纯ipv6网络环境，如此就可以省去部署代理带来的密钥分配的麻烦。但是非常可惜，在只有纯ipv6网络的Ubuntu下，Firefox和Chromium都是罢工的，即使在纯ipv6环境的Windows下，两者也常常罢工；同时，这也会影响纯ipv6环境中Ubuntu在线用户的设定……</p>
<p>通过Google搜索发现，有人还在mozilla这边提交了bug：<a href="http://support.mozilla.com/zh-TW/questions/877650">Cannot sign in to google account. Page stalls at waiting for account.google.com</a>。在纯ipv6环境下的Ubuntu上面试了几次，发现只要是https协议的链接，两者都打不开，但是w3m就毫无压力，所以怀疑是Firefox和Chromium在证书方面遇到问题，于是修改两者的证书验证选项：</p>
<p>For firefox:</p>
<blockquote>
<p>unselect checkbox of &#96;&#96;Options—&gt;Advanced—&gt;Encryption—&gt;Certificates—&gt;Validation—&gt;Use the Online Certificate Status Protocol(OCSP) to confirm the current validity of certificates’’  </p>
</blockquote>
<p>For Chromium:</p>
<blockquote>
<p>unselect checkbox of &#96;&#96;Options—&gt;Under the Hood—&gt;HTTPS&#x2F;SSL—&gt;Check for server certificate revocation’’  </p>
</blockquote>
<p>这样设置之后两者登陆https站点的障碍就立马消除了，Ubuntu下的在线用户也可以成功设定了，但是确实是存在安全风险的。最好的解决方案还是期待广大CA早日向ipv6过渡 ;)</p>
]]></content>
  </entry>
  <entry>
    <title>Debian 8.9(Jessie)编译Python 3.7.2</title>
    <url>/2019/01/22/build-latest-python3-on-debian/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文涉及的所有vim插件，在这里均有列出：<a href="https://github.com/wadarochi/pt.vim">pt.vim</a>。</p>
<h1 id="问题起源"><a href="#问题起源" class="headerlink" title="问题起源"></a>问题起源</h1><p>猪厂内网，本人某一台开发服务器上目前还运行着古董Debian：Jessie，官方repo中各种legacy软件让人崩溃。所以我在home路径下放了个.local，把各种常用软件都编译了一份最新版扔在这里，比如：</p>
<ul>
<li>vim 8.1.789——为了体验8.1引入的terminal功能</li>
<li>tmux 2.8——因为vim material主题在老版本的tmux中会颜色错乱</li>
<li>rg——Debian Jessie repo中没有这货</li>
<li>mc——Debian Jessie repo中这货版本太老了</li>
<li>python 3.7.2——好用的vim插件denite.nvim要求Python 3.6以上，而官方repo中只有3.4</li>
<li>gcc 8.2——编译Python 3.7需要新版本的gcc，索性build一个当下最新版本</li>
</ul>
<p>某天早上，我在开发服务器上的vim中例（手）行（贱）运行更新了所有vim插件：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">:<span class="keyword">call</span> dein#update()</span><br></pre></td></tr></table></figure>

<p>然后，denite.nvim就不能用了：当我例行<code>Ctrl-P</code>，期望打开当前路径下某一文件时爆了一个Python trace。一个Python 3.6才引入的新方法报错了——找不到。打开denite.nvim的git log一看，果然作者有了新想法（我也喜欢追新，比如<code>--std=c++latest</code>）：</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">* [2018-10-21] [9ba61c7] | Python 3.5+ is required &#123;&#123;Shougo Matsushita&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>因为这个插件很好用，所以只能升级开发机上的Python了。上文也说了，repo中只有3.4，搜索了各种backport，都没有为Jessie提供3.5以上的Python3，遂动手从源码编译。</p>
<span id="more"></span>

<h1 id="编译Python-3-7-2"><a href="#编译Python-3-7-2" class="headerlink" title="编译Python 3.7.2"></a>编译Python 3.7.2</h1><h2 id="准备工作——编译gcc-8-2"><a href="#准备工作——编译gcc-8-2" class="headerlink" title="准备工作——编译gcc 8.2"></a>准备工作——编译gcc 8.2</h2><p>Debian Jessise repo中的gcc 4.9.2无法胜任编译Python 3.7.2的重任，所以需要先从源码中build一份gcc，反正都已经从源码build了，干脆来个最新的，本文写作时，GNU FTP上最新的gcc为8.2.0，就是它了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># prepare dev libs</span><br><span class="line">sudo apt install libgcc-4.9-dev</span><br><span class="line"></span><br><span class="line"># prepare build directory</span><br><span class="line">mkdir gcc</span><br><span class="line">cd gcc</span><br><span class="line">mkdir gcc-build</span><br><span class="line"></span><br><span class="line"># download</span><br><span class="line">wget https://ftp.gnu.org/gnu/gcc/gcc-8.2.0/gcc-8.2.0.tar.xz</span><br><span class="line"></span><br><span class="line"># extract gcc source code</span><br><span class="line">tar xz gcc-8.2.0.tar.xz</span><br><span class="line">cd gcc-8.2.0</span><br><span class="line"></span><br><span class="line"># prepare dependencies</span><br><span class="line">./contrib/download_prerequisite</span><br><span class="line"></span><br><span class="line"># configure</span><br><span class="line">cd ../gcc-build</span><br><span class="line">../gcc-8.2.0/configure --prefix=/home/xxx/.local --enable-shared --disable-multilib --enable-threads=posix --enable-__cxa_atexit --enable-clocale=gnu --enable-languages=c,c++,fortran,go,objc,obj-c++</span><br><span class="line"></span><br><span class="line"># build</span><br><span class="line">make -j4</span><br><span class="line"></span><br><span class="line"># install into my home directory</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>因为服务器是64位系统，所以并不需要编译32位版本的gcc，于是在build gcc的时候将multilib这个特性给禁用了。编译gcc花了我接近两个小时……在继续往下之前，请确保<code>/home/xxx/.local/bin</code>已经在你的<code>PATH</code>当中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; g++ --version</span><br><span class="line">g++ (GCC) 8.2.0</span><br><span class="line">Copyright (C) 2018 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure>

<h2 id="编译Python"><a href="#编译Python" class="headerlink" title="编译Python"></a>编译Python</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># prepare build directory</span><br><span class="line">mkdir python</span><br><span class="line">cd python</span><br><span class="line">mkdir python-build</span><br><span class="line"></span><br><span class="line"># download</span><br><span class="line">wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tar.xz</span><br><span class="line"></span><br><span class="line"># extract</span><br><span class="line">tar -xf Python-3.7.2.tar.xz</span><br><span class="line"></span><br><span class="line"># configure</span><br><span class="line">cd python-build</span><br><span class="line">../Python-3.7.2/configure --enable-optimizations --prefix=/home/xxx/.local</span><br><span class="line"></span><br><span class="line"># build</span><br><span class="line">make -j4</span><br><span class="line"></span><br><span class="line"># install</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>测试一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -c &quot;import sys; print(sys.version)&quot;</span><br><span class="line">3.7.2 (default, Jan 22 2019, 17:11:23)</span><br><span class="line">[GCC 8.2.0]</span><br></pre></td></tr></table></figure>

<p>Cool!</p>
<h2 id="重新编译vim"><a href="#重新编译vim" class="headerlink" title="重新编译vim"></a>重新编译vim</h2><p>上面的步骤全部搞定之后，正常情况下，在vim里面运行Python插件的时候应该已经可以找到<code>PATH</code>中的Python 3.7.2了，但是如果和我一样，之前编译vim的时候指定了系统的Python 3.4，那么你就得重新编译vim。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># clone source code of vim from github</span><br><span class="line">git clone https://github.com/vim/vim.git</span><br><span class="line"></span><br><span class="line"># configure</span><br><span class="line">export LDFLAGS=&quot;-rdynamic&quot;</span><br><span class="line">PYTHON=&quot;/home/xxx/.local/bin/python3.7&quot; ./configure --with-features=huge --enable-python3interp=yes --enable-fail-if-missing --enable-multibyte --enable-gui=no --enable-cscope --prefix=/home/xxx/.local/</span><br><span class="line"></span><br><span class="line"># build</span><br><span class="line">make -j4</span><br><span class="line"></span><br><span class="line"># install</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>请注意这里一定要<code>export LDFLAGS=&quot;-rdynamic&quot;</code>，原因见这里：<a href="https://github.com/vim/vim/issues/3629#issuecomment-440845680">undefined symbol: PyByteArray_Type #3629</a>。</p>
<p>大功告成之后，denite.nvim工作又一切正常了，开心！只是如果你一直在vim源码路径编译的话，修改configure之前记得清理一下configure的中间文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clean -fd</span><br><span class="line">git clean -fX</span><br></pre></td></tr></table></figure>

<p>btw：写这篇文章的时候正好来了两位外国主播友人，给他们介绍了一番Rules of Survival新东东，好像我英语也还行，哈哈哈。</p>
]]></content>
      <tags>
        <tag>debian</tag>
        <tag>vim</tag>
        <tag>python3</tag>
        <tag>gcc</tag>
      </tags>
  </entry>
  <entry>
    <title>最简单的用Docker在Debian上安装GitLab的方法</title>
    <url>/2017/10/28/debian-install-gitlab-by-docker/</url>
    <content><![CDATA[<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="安装最新版docker-engine"><a href="#安装最新版docker-engine" class="headerlink" title="安装最新版docker engine"></a>安装最新版docker engine</h2><p>参考文章：<a href="http://ask.xmodulo.com/upgrade-docker-debian-ubuntu.html">How to upgrade Docker on Debian or Ubuntu using the official source</a></p>
<h3 id="源里面的docker版本"><a href="#源里面的docker版本" class="headerlink" title="源里面的docker版本"></a>源里面的docker版本</h3><p>开发服务器上使用的版本是Debian jessie，已经是老版本了，不出意料，源里面的docker果然是老版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ apt search docker</span><br><span class="line"></span><br><span class="line">lxc-docker-1.6.0/未知,now 1.6.0 amd64</span><br><span class="line">  Linux container runtime</span><br></pre></td></tr></table></figure>

<h3 id="安装Docker官方源中的docker"><a href="#安装Docker官方源中的docker" class="headerlink" title="安装Docker官方源中的docker"></a>安装Docker官方源中的docker</h3><p>显然太老了，那么就从docker官方源安装最新版吧，Debian指令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加docker官方源repo key（对Debian和Ubuntu都一样）</span></span><br><span class="line">$ sudo apt-key adv --keyserver http://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加docker官方源，For Debian (7.0 and higher)</span></span><br><span class="line">$ sudo sh -c <span class="string">&quot;echo &#x27;deb https://apt.dockerproject.org/repo debian-<span class="subst">$(lsb_release -sc)</span> main&#x27; | cat &gt; /etc/apt/sources.list.d/docker.list&quot;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>如果你之前不小心装了<code>lxc-docker-1.6.0</code>，把它卸载掉：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt remove lxc-docker-1.6.0</span><br></pre></td></tr></table></figure>

<p>接下来，安装最新版本的docker：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update; sudo apt-get install docker-engine</span><br><span class="line"></span><br><span class="line">$ docker --version</span><br><span class="line">Docker version 17.05.0-ce, build 89658be</span><br></pre></td></tr></table></figure>

<p>对于Ubuntu系统，也就是添加源的那一行指令有少许差异，把<code>debian-</code>换成<code>ubuntu-</code>就好了，具体可以参考前面列的那篇参考文章。</p>
<h2 id="通过docker安装GitLab"><a href="#通过docker安装GitLab" class="headerlink" title="通过docker安装GitLab"></a>通过docker安装GitLab</h2><p>参考文章：<a href="https://github.com/sameersbn/docker-gitlab#installation">docker-gitlab#installation</a></p>
<h3 id="获取GitLab的docker-image"><a href="#获取GitLab的docker-image" class="headerlink" title="获取GitLab的docker image"></a>获取GitLab的docker image</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker pull sameersbn/gitlab:10.1.0</span><br></pre></td></tr></table></figure>

<p>如果你想尝试最新版本的GitLab，也可以把<code>10.1.0</code>改成<code>latest</code>，须谨慎。</p>
<h3 id="让GitLab跑起来"><a href="#让GitLab跑起来" class="headerlink" title="让GitLab跑起来"></a>让GitLab跑起来</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用docker compose最简单，来，我们装一个docker compose</span></span><br><span class="line">$ sudo curl -L https://github.com/docker/compose/releases/download/1.10.0/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载GitLab所需的docker-compose.yml</span></span><br><span class="line">$ wget https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml</span><br></pre></td></tr></table></figure>

<p>在我们正式让GitLab跑起来之前，我们最好去设置一下，也就是编辑一下刚刚下载下来的docker-compose.yml，我做了如下修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">47c47</span><br><span class="line">&lt;     - TZ=Asia/Kolkata</span><br><span class="line">---</span><br><span class="line">&gt;     - TZ=Asia/Shanghai</span><br><span class="line">53c53</span><br><span class="line">&lt;     - GITLAB_HOST=localhost</span><br><span class="line">---</span><br><span class="line">&gt;     - GITLAB_HOST=xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure>

<p>最后，让GitLab跑起来：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo docker-compose up</span><br></pre></td></tr></table></figure>

<p>这样你就可以通过浏览器在 <a href="http://xxx.xxx.xxx.xxx:10080/">http://xxx.xxx.xxx.xxx:10080</a> 访问到你自己的GitLab了。</p>
<p>一切正常之后，在当前终端<code>Ctrl-C</code>终止当前的GitLab的Docker，该用下面的指令来运行GitLab Daemon就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>是不是很简单，仅仅需要十条左右的无脑指令。而且之后只要你的Debian上的docker service启动，GitLab就会启动，完全无须自己去设置systemd。</p>
<h2 id="修改设置、升级"><a href="#修改设置、升级" class="headerlink" title="修改设置、升级"></a>修改设置、升级</h2><h3 id="你想换新版本的GitLab"><a href="#你想换新版本的GitLab" class="headerlink" title="你想换新版本的GitLab"></a>你想换新版本的GitLab</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先cd到你存放docker-compose.yml的路径，再运行下面的指令，我没看手册，不知道在其它地方运行会不会有效果</span></span><br><span class="line">$ sudo docker-compose pull</span><br><span class="line">$ sudo docker-compose up -d</span><br></pre></td></tr></table></figure>

<h3 id="你改了docker-compose-yml"><a href="#你改了docker-compose-yml" class="headerlink" title="你改了docker-compose.yml"></a>你改了docker-compose.yml</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先cd到你存放docker-compose.yml的路径，再运行下面的指令，我没看手册，不知道在其它地方运行会不会有效果</span></span><br><span class="line">$ sudo docker-compose up -d</span><br></pre></td></tr></table></figure>

<h1 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h1><p>讲完了安装步骤，这里扯点其它的，鄙司内把svn作为项目代码的版本管理工具，我们希望每个功能的开发，都只有一个提交，这样做有两个方面的考虑：</p>
<ol>
<li>方便做code review。</li>
<li>如果某个功能引入bug，可以快速、准确的回退这个功能相关的代码。</li>
</ol>
<p>有利有弊，假如只有一个提交：</p>
<ol>
<li>中间的那些修改只能本地保存了吗？万一硬盘坏了就gg了……</li>
<li>这个功能需要多人协作怎么办？</li>
</ol>
<p>等等，为什么不用svn分支，开发完之后merge会trunk就好了？组内很多同学也有这样的疑问。但是在我看来，直接用svn分支有如下弊端：</p>
<ol>
<li>QA测试问题</li>
<li>已有机制兼容问题</li>
</ol>
<h2 id="QA测试问题"><a href="#QA测试问题" class="headerlink" title="QA测试问题"></a>QA测试问题</h2><p>游戏公司向来特别喜欢压榨QA同学们，我也很同情他们，一个完整的开发流程如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">策划提需求 --&gt; 美术设计(optional) --&gt; 程序开发(optional，因为有时只需要策划拖编辑器或者改表就好了) --&gt; QA测试 --&gt; bug修复 --&gt; 功能放出</span><br></pre></td></tr></table></figure>

<p>我们这还有周版本的概念，周版本就对应着每周的功能放出，这个时间点是定死的，真正的deadline，前面几个环节都可以拖，但是QA测试、bug修复一定不能拖。于是，为了避免QA同学通宵测试、程序员同学通宵改bug，QA就会在程序开发时介入测试，及早发现bug。</p>
<p>在开发进行中介入测试，假如此时测试的代码距离最终版有很大的区别，那基本上在最终提交之后还得把这个功能点测试一次，所以我们要尽可能避免这种区别，那么导致这种区别的原因是什么呢？</p>
<ol>
<li>QA测试到的代码不是基于trunk HEAD的（这种情况比较多），那么如果你用了svn分支，当你需要同步到trunk HEAD，老老实实去sync merge吧，但是如果你没有用svn分支，<code>svn update</code>就好了（两者都可能需要解决冲突，但是后者明显会简单得多，对新手也不容易错）。</li>
<li>程序员自己在测试完之后又去重构了（这种情况比较少，一般是因为code review）。</li>
</ol>
<p>所以我觉得从“让QA测试到最终代码方面”考虑，不用svn分支会更加好一些。</p>
<h2 id="已有机制的兼容问题"><a href="#已有机制的兼容问题" class="headerlink" title="已有机制的兼容问题"></a>已有机制的兼容问题</h2><h3 id="code-review问题"><a href="#code-review问题" class="headerlink" title="code review问题"></a>code review问题</h3><p>用了svn分支，你的diff是通过比对两个svn分支来生成的；没有用svn分支，你的diff只需要<code>svn diff</code>就好了。后者的话，组内正在使用的review board工具就不需要修改。（最弱的理由……）</p>
<h3 id="代码同步机制"><a href="#代码同步机制" class="headerlink" title="代码同步机制"></a>代码同步机制</h3><p>一直以来，我们在内服开发时，所有客户端会首先把代码、资源会同步到trunk HEAD，然后再同步特定功能的代码和资源——我们称为“功能分支”。功能分支本身的生成则依赖<code>svn diff</code>和git：首先用<code>svn diff</code>找到所有相对trunk HEAD的修改，然后把这些文件扔到git中去，会有一个工具根据git去生成功能分支的内容。</p>
<p>从“已有机制的兼容”考虑，也是不用svn分支会更加好一些。</p>
<p>然后我们既然已经引入了git，何不干脆就用git来做svn的补充就好了，为了防止硬盘挂掉导致本地git repo也消失的风险，同时也是多人协作的需要，我们需要一台git服务器，GitLab不错，于是有了前面的教程。</p>
<h2 id="svn、git混用的建议"><a href="#svn、git混用的建议" class="headerlink" title="svn、git混用的建议"></a>svn、git混用的建议</h2><ul>
<li>更新的时候先更新git再更新svn</li>
<li>保险起见，每个功能开发都新建一个新的git repo</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Debian</tag>
        <tag>Ubuntu</tag>
        <tag>Docker</tag>
        <tag>GitLab</tag>
      </tags>
  </entry>
  <entry>
    <title>最简单的用Docker在Debian上安装Jupyter的方法</title>
    <url>/2017/10/29/debian-install-jupyter-by-docker/</url>
    <content><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>阅读本文之前，我假设你已经在Debian&#x2F;Ubuntu上安装了最新的<code>docker engine</code>和<code>docker compose</code>，如果这倆尚未安装，请先参考这篇blog： <a href="http://wadarochi.github.io/2017/10/28/debian-install-gitlab-by-docker/">最简单的用Docker在Debian上安装GitLab的方法</a> 。另外，本文描述的安装方法，在Ubuntu上应该也是可以用的。</p>
<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="获取最新的docker-image"><a href="#获取最新的docker-image" class="headerlink" title="获取最新的docker image"></a>获取最新的docker image</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo docker pull jupyter/datascience-notebook</span><br></pre></td></tr></table></figure>

<p>这条指令大概会下载5.5G左右的数据，下载完之后可以运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo docker images</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">jupyter/datascience-notebook   latest              312e1540f9f0        6 days ago          5.66GB</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>如果输出中出现<code>jupyter/datascience-notebook</code>，那就是已经下载好了</p>
<span id="more"></span>

<h2 id="设置外部存储"><a href="#设置外部存储" class="headerlink" title="设置外部存储"></a>设置外部存储</h2><p>有了docker image，我们还需要设置一下外部存放Jupyter的notebook的地方：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo docker volume create --name notebook</span><br></pre></td></tr></table></figure>

<h2 id="编写供docker-compose使用的配置文件"><a href="#编写供docker-compose使用的配置文件" class="headerlink" title="编写供docker compose使用的配置文件"></a>编写供docker compose使用的配置文件</h2><p>将下面的内容贴到名为<code>notebook.yml</code>的文件中去。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Copyright (c) Jupyter Development Team.</span></span><br><span class="line"><span class="comment"># Distributed under the terms of the Modified BSD License.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">notebook:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jupyter/datascience-notebook</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;work:/home/jovyan/work&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;8888:8888&quot;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">     start-notebook.sh</span></span><br><span class="line"><span class="string">     --NotebookApp.token=&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">work:</span></span><br><span class="line">    <span class="attr">external:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">notebook</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ol>
<li>image中指定的就是我们刚刚通过<code>docker pull</code>从DockerHub上下载下来的image名字；</li>
<li>services中的volumes，以及下方的volumes，将docker中的<code>/home/jovyan/work</code>映射到了我们刚刚创建的名为<code>notebook</code>的docker volume当中，这样你重启docker的时候，里面的数据就不会消失了；</li>
<li>请注意command中，我把Jupyter的密码给禁掉了，如果你的服务位于公网，那还是不要这么干比较好，推荐参考Jupyter官方的docker compose demo： <a href="https://github.com/jupyter/docker-stacks/blob/master/examples/docker-compose/notebook/letsencrypt-notebook.yml">letsencrypt-notebook.yml</a>。</li>
</ol>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我假定你已经cd到notebook.yml所在的路径了</span></span><br><span class="line">$ sudo docker-compose -f notebook.yml up -d</span><br></pre></td></tr></table></figure>

<p>然后你就可以打开浏览器访问你服务器的8888端口，这就是你的Jupyter。</p>
<h1 id="想试试其它的Jupyter"><a href="#想试试其它的Jupyter" class="headerlink" title="想试试其它的Jupyter"></a>想试试其它的Jupyter</h1><p>Jupyter官方创建了一大堆image在 <a href="https://hub.docker.com/u/jupyter/">Docker Hub</a> 上，可以随你使用、体验，比如你想用scipy-notebook，那么把上面的<code>jupyter/datascience-notebook</code>替换成<code>jupyter/scipy-notebook</code>就好了。</p>
]]></content>
      <tags>
        <tag>Debian</tag>
        <tag>Ubuntu</tag>
        <tag>Docker</tag>
        <tag>Jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样写python的if语句比较高效？</title>
    <url>/2017/10/15/effective-python-if/</url>
    <content><![CDATA[<h1 id="问题来源"><a href="#问题来源" class="headerlink" title="问题来源"></a>问题来源</h1><p>跳转，尤其是条件跳转有可能会打断CPU指令的流水线执行，所以在性能要求比较高的代码中，我都是系统尽量不要出现if，那实在要出现怎么办了，比如有如下代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> component <span class="keyword">in</span> components:</span><br><span class="line">    <span class="comment"># 判断是否要处理component数据</span></span><br><span class="line">    <span class="keyword">if</span> component.enabled:</span><br><span class="line">        <span class="comment"># do sth...</span></span><br></pre></td></tr></table></figure>

<p>这种情况下我是应该写成上面这种形式，还是应该写成下面的形式呢，哪种更高效？</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> component <span class="keyword">in</span> components:</span><br><span class="line">    <span class="comment"># 判断是否要处理component数据</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> component.enabled:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># do sth...</span></span><br></pre></td></tr></table></figure>

<p>别问我为什么性能要求比较高的时候还要用python，我也不想……那么假设我们知道条件为<code>True</code>和<code>False</code>的概率，哪一种比较高效？</p>
<span id="more"></span>

<h1 id="Python解释器中if语句的实现细节"><a href="#Python解释器中if语句的实现细节" class="headerlink" title="Python解释器中if语句的实现细节"></a>Python解释器中if语句的实现细节</h1><h2 id="字节码"><a href="#字节码" class="headerlink" title="字节码"></a>字节码</h2><p>上述的第一种编码方式更容易生成箭头型的代码，直观的解释就是下面这种：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> balabala:</span><br><span class="line">    <span class="keyword">if</span> a.b:</span><br><span class="line">        <span class="keyword">if</span> a.c:</span><br><span class="line">            <span class="keyword">if</span> a.d:</span><br><span class="line">                <span class="comment"># do sth...</span></span><br></pre></td></tr></table></figure>

<p>所以我们经常使用<code>Guard Clauses</code>的方式去规避这样的箭头型代码，看起来会比较漂亮一些，就是下面这种：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> balabala:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> a.b:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> a.c:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> a.d:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># do sth...</span></span><br></pre></td></tr></table></figure>

<p>回到之前的问题，哪种比较高效？首先我们给出示例代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> dis <span class="keyword">import</span> dis</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">class</span> <span class="title class_">Component</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">   ...:     <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">   ...:         self.enabled = <span class="literal">True</span></span><br><span class="line">   ...:     <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, delta_time_s</span>):</span><br><span class="line">   ...:         <span class="keyword">pass</span></span><br><span class="line">   ...: </span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: components = [Component() <span class="keyword">for</span> idx <span class="keyword">in</span> xrange(<span class="number">10000</span>)]</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: <span class="keyword">def</span> <span class="title function_">update_in_arrow_form</span>(<span class="params">delta_time_s</span>):</span><br><span class="line">   ...:     <span class="keyword">for</span> c <span class="keyword">in</span> components:</span><br><span class="line">   ...:         <span class="keyword">if</span> c.enabled:</span><br><span class="line">   ...:             c.update(delta_time_s)</span><br><span class="line">   ...: </span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: <span class="keyword">def</span> <span class="title function_">update_in_guard_clauses_form</span>(<span class="params">delta_time_s</span>):</span><br><span class="line">   ...:     <span class="keyword">for</span> c <span class="keyword">in</span> components:</span><br><span class="line">   ...:         <span class="keyword">if</span> <span class="keyword">not</span> c.enabled:</span><br><span class="line">   ...:             <span class="keyword">continue</span></span><br><span class="line">   ...:         c.update(delta_time_s)</span><br><span class="line">   ...:</span><br></pre></td></tr></table></figure>

<p>在上边的代码中，我们模拟了一个遍历Component容器并且调用每一个Component的update方法(这种Component的设计是很糟糕的，状态和行为还是需要分割开来比较好，参考ECS)，遍历过程中需要判定Component是否需要处理，这就引入了分支逻辑。</p>
<p>在看看字节码之前，我先根据过往教科书上的知识做一个猜想：<strong>引发分支预测错误少、分支预测错误代价小的写法，性能更好</strong>。</p>
<p>然后我们来看看箭头型代码的字节码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">6</span>]: dis(update_in_arrow_form)</span><br><span class="line">  <span class="number">2</span>           <span class="number">0</span> SETUP_LOOP              <span class="number">39</span> (to <span class="number">42</span>)</span><br><span class="line">              <span class="number">3</span> LOAD_GLOBAL              <span class="number">0</span> (components)</span><br><span class="line">              <span class="number">6</span> GET_ITER</span><br><span class="line">        &gt;&gt;    <span class="number">7</span> FOR_ITER                <span class="number">31</span> (to <span class="number">41</span>)</span><br><span class="line">             <span class="number">10</span> STORE_FAST               <span class="number">1</span> (c)</span><br><span class="line"></span><br><span class="line">  <span class="number">3</span>          <span class="number">13</span> LOAD_FAST                <span class="number">1</span> (c)</span><br><span class="line">             <span class="number">16</span> LOAD_ATTR                <span class="number">1</span> (enabled)</span><br><span class="line">             <span class="number">19</span> POP_JUMP_IF_FALSE       <span class="number">38</span></span><br><span class="line"></span><br><span class="line">  <span class="number">4</span>          <span class="number">22</span> LOAD_FAST                <span class="number">1</span> (c)</span><br><span class="line">             <span class="number">25</span> LOOKUP_METHOD            <span class="number">2</span> (update)</span><br><span class="line">             <span class="number">28</span> LOAD_FAST                <span class="number">0</span> (delta_time_s)</span><br><span class="line">             <span class="number">31</span> CALL_METHOD              <span class="number">1</span></span><br><span class="line">             <span class="number">34</span> POP_TOP</span><br><span class="line">             <span class="number">35</span> JUMP_ABSOLUTE            <span class="number">7</span></span><br><span class="line">        &gt;&gt;   <span class="number">38</span> JUMP_ABSOLUTE            <span class="number">7</span></span><br><span class="line">        &gt;&gt;   <span class="number">41</span> POP_BLOCK</span><br><span class="line">        &gt;&gt;   <span class="number">42</span> LOAD_CONST               <span class="number">0</span> (<span class="literal">None</span>)</span><br><span class="line">             <span class="number">45</span> RETURN_VALUE</span><br></pre></td></tr></table></figure>

<p>可以看出只有在判断<code>c.enabled</code>为<code>False</code>的情况下，才需要跳转，假如<code>c.enabled</code>大概率为<code>True</code>的时候，类似逻辑写成箭头型符合之前的猜想，但是如果<code>c.enabled</code>大概率为<code>False</code>，就不符合了。</p>
<p>那<code>Guard Clauses</code>这种写法呢？也看看字节码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">7</span>]: dis(update_in_guard_clauses_form)</span><br><span class="line">  <span class="number">2</span>           <span class="number">0</span> SETUP_LOOP              <span class="number">42</span> (to <span class="number">45</span>)</span><br><span class="line">              <span class="number">3</span> LOAD_GLOBAL              <span class="number">0</span> (components)</span><br><span class="line">              <span class="number">6</span> GET_ITER</span><br><span class="line">        &gt;&gt;    <span class="number">7</span> FOR_ITER                <span class="number">34</span> (to <span class="number">44</span>)</span><br><span class="line">             <span class="number">10</span> STORE_FAST               <span class="number">1</span> (c)</span><br><span class="line"></span><br><span class="line">  <span class="number">3</span>          <span class="number">13</span> LOAD_FAST                <span class="number">1</span> (c)</span><br><span class="line">             <span class="number">16</span> LOAD_ATTR                <span class="number">1</span> (enabled)</span><br><span class="line">             <span class="number">19</span> POP_JUMP_IF_TRUE        <span class="number">28</span></span><br><span class="line"></span><br><span class="line">  <span class="number">4</span>          <span class="number">22</span> JUMP_ABSOLUTE            <span class="number">7</span></span><br><span class="line">             <span class="number">25</span> JUMP_FORWARD             <span class="number">0</span> (to <span class="number">28</span>)</span><br><span class="line"></span><br><span class="line">  <span class="number">5</span>     &gt;&gt;   <span class="number">28</span> LOAD_FAST                <span class="number">1</span> (c)</span><br><span class="line">             <span class="number">31</span> LOOKUP_METHOD            <span class="number">2</span> (update)</span><br><span class="line">             <span class="number">34</span> LOAD_FAST                <span class="number">0</span> (delta_time_s)</span><br><span class="line">             <span class="number">37</span> CALL_METHOD              <span class="number">1</span></span><br><span class="line">             <span class="number">40</span> POP_TOP</span><br><span class="line">             <span class="number">41</span> JUMP_ABSOLUTE            <span class="number">7</span></span><br><span class="line">        &gt;&gt;   <span class="number">44</span> POP_BLOCK</span><br><span class="line">        &gt;&gt;   <span class="number">45</span> LOAD_CONST               <span class="number">0</span> (<span class="literal">None</span>)</span><br><span class="line">             <span class="number">48</span> RETURN_VALUE</span><br></pre></td></tr></table></figure>

<p>只要<code>c.enabled</code>为<code>True</code>，就会引发跳转，那么就和之前的箭头型代码反过来了：假如<code>c.enabled</code>大概率为<code>True</code>的时候，类似逻辑写成<code>Guard Clauses</code>型是不符合猜想的，但是如果<code>c.enabled</code>大概率为<code>False</code>，就符合猜想。</p>
<p>虽然上面的例子没有加上<code>else</code>分支，但是如果你自己加上<code>else</code>分支，也是类似的字节码。</p>
<h2 id="CPython的底层实现"><a href="#CPython的底层实现" class="headerlink" title="CPython的底层实现"></a>CPython的底层实现</h2><p>到目前为止，我们看到的都是字节码层面的内容，<code>CPython</code>底层<code>POP_JUMP_IF_TRUE</code>和<code>POP_JUMP_IF_FALSE</code>是如何处理跳转的呢？答案在<code>ceval.c</code>中，这里我只贴<code>POP_JUMP_IF_FALSE</code>相关的代码，<code>POP_JUMP_IF_TRUE</code>其实是类似的：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">PREDICTED(POP_JUMP_IF_FALSE);</span><br><span class="line">TARGET(POP_JUMP_IF_FALSE) &#123;</span><br><span class="line">    PyObject *cond = POP();</span><br><span class="line">    <span class="type">int</span> err;</span><br><span class="line">    <span class="keyword">if</span> (cond == Py_True) &#123;</span><br><span class="line">        Py_DECREF(cond);</span><br><span class="line">        FAST_DISPATCH();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cond == Py_False) &#123;</span><br><span class="line">        Py_DECREF(cond);</span><br><span class="line">        JUMPTO(oparg);</span><br><span class="line">        FAST_DISPATCH();</span><br><span class="line">    &#125;</span><br><span class="line">    err = PyObject_IsTrue(cond);</span><br><span class="line">    Py_DECREF(cond);</span><br><span class="line">    <span class="keyword">if</span> (err &gt; <span class="number">0</span>)</span><br><span class="line">        ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (err == <span class="number">0</span>)</span><br><span class="line">        JUMPTO(oparg);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">goto</span> error;</span><br><span class="line">    DISPATCH();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>果然，字面意思就是如果判断为<code>False</code>我才跳转，<code>JUMPTO</code>只有在<code>cond == Py_False</code>的时候才会被调用到。</p>
<p>那这么说，是不是意味着：<strong>最可能运行到的代码应该放到if分支中，箭头型代码比Guard Clauses重构过的代码性能要好？</strong></p>
<h2 id="Benchmark"><a href="#Benchmark" class="headerlink" title="Benchmark"></a>Benchmark</h2><p>如果没有Benchmark，一切都只是猜想，因为一方面CPU的流水线分支预测非常复杂，还有乱序执行等等高级技术在里面；另一方面除了<code>JUMPTO</code>，上面解释执行Python代码的C代码中还有大量的<code>if-else</code>分支，也就是说只要出现这条字节码，对CPU就会多出非常多的分支。所以单从字节码层面的跳转分析可能是不准的，只好测一测了。</p>
<p>这里我构造两组<code>components</code>，第一组只有每十个中只有一个<code>Component</code>的<code>enabled</code>为<code>True</code>，另一组反过来，然后看看运行时间的对比：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">8</span>]: <span class="keyword">def</span> <span class="title function_">test_almost_true</span>(<span class="params">f</span>):</span><br><span class="line">   ...:     <span class="keyword">for</span> idx, component <span class="keyword">in</span> <span class="built_in">enumerate</span>(components):</span><br><span class="line">   ...:         <span class="keyword">if</span> idx % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">   ...:             component.enabled = <span class="literal">False</span></span><br><span class="line">   ...:         <span class="keyword">else</span>:</span><br><span class="line">   ...:             component.enabled = <span class="literal">True</span></span><br><span class="line">   ...:     <span class="keyword">return</span> timeit.repeat(<span class="keyword">lambda</span>: f(<span class="number">0</span>), number=<span class="number">10</span>)</span><br><span class="line">   ...:</span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: <span class="keyword">def</span> <span class="title function_">test_almost_false</span>(<span class="params">f</span>):</span><br><span class="line">   ...:     <span class="keyword">for</span> idx, component <span class="keyword">in</span> <span class="built_in">enumerate</span>(components):</span><br><span class="line">   ...:         <span class="keyword">if</span> idx % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">   ...:             component.enabled = <span class="literal">True</span> </span><br><span class="line">   ...:         <span class="keyword">else</span>:</span><br><span class="line">   ...:             component.enabled = <span class="literal">False</span></span><br><span class="line">   ...:     <span class="keyword">return</span> timeit.repeat(<span class="keyword">lambda</span>: f(<span class="number">0</span>), number=<span class="number">10</span>)</span><br><span class="line">   ...:</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: a1 = test_almost_true(update_in_arrow_form)</span><br><span class="line"></span><br><span class="line">In [<span class="number">11</span>]: b1 = test_almost_true(update_in_guard_clauses_form)</span><br><span class="line"></span><br><span class="line">In [<span class="number">12</span>]: <span class="keyword">for</span> m, n <span class="keyword">in</span> <span class="built_in">zip</span>(a1, b1):</span><br><span class="line">    ...:     <span class="built_in">print</span> (m - n) / n * <span class="number">100.0</span></span><br><span class="line">    ...:</span><br><span class="line"><span class="number">23.0675013609</span></span><br><span class="line">-<span class="number">23.0445608311</span></span><br><span class="line">-<span class="number">16.3107397091</span></span><br><span class="line"><span class="number">30.4611497157</span></span><br><span class="line">-<span class="number">2.43304228392</span></span><br><span class="line">-<span class="number">4.31911240259</span></span><br><span class="line"><span class="number">79.3438445612</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">13</span>]: <span class="keyword">def</span> <span class="title function_">no_branch</span>(<span class="params">delta_time_s</span>):</span><br><span class="line">    ...:     <span class="keyword">for</span> c <span class="keyword">in</span> components:</span><br><span class="line">    ...:         c.update(delta_time_s)</span><br><span class="line">    ...:</span><br><span class="line"></span><br><span class="line">In [<span class="number">14</span>]: g = test_almost_true(no_branch)</span><br><span class="line"></span><br><span class="line">In [<span class="number">15</span>]: <span class="keyword">for</span> m, n <span class="keyword">in</span> <span class="built_in">zip</span>(a1, g):</span><br><span class="line">    ...:     <span class="built_in">print</span> (m - n) / n * <span class="number">100</span></span><br><span class="line">    ...: </span><br><span class="line"><span class="number">204.991568297</span></span><br><span class="line"><span class="number">151.134771645</span></span><br><span class="line"><span class="number">209.973251815</span></span><br><span class="line"><span class="number">313.04</span></span><br><span class="line"><span class="number">303.284671533</span></span><br><span class="line"><span class="number">174.186222559</span></span><br><span class="line"><span class="number">357.392363932</span></span><br></pre></td></tr></table></figure>

<p>&amp;*%^)$#，看起来在字节码和c代码层面根据跳转与否做出的猜想，与测试结果不一致…</p>
<p>经过了非常多的测试，看起来在Intel i5平台上（移动版，性能很差，从上面的数据就可以看出来了），有这样的结论：</p>
<ol>
<li>即使在有先验概率支持的情况下，箭头型代码并不比<code>Guard Clauses</code>重构过的代码快，两者的测试看不出显著差别，那么我们还是继续使用<code>Guard Clauses</code>形式的代码好了；</li>
<li>相对于没有分支的代码，有分支的代码要慢（相对百分之两三百，不过绝对值非常小），尽管没分支的测试代码多调用了11%的函数(这个和经验倒是吻合的)。</li>
</ol>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>GNOME Shell 3.24中的GTK程序也可以用fcitx啦</title>
    <url>/2017/10/15/fcitx-on-gnome-shell/</url>
    <content><![CDATA[<h1 id="OS和Desktop-Environment"><a href="#OS和Desktop-Environment" class="headerlink" title="OS和Desktop Environment"></a>OS和Desktop Environment</h1><p>操作系统：Ubuntu 17.04<br>桌面环境：GNOME Shell 3.24 on wayland</p>
<h1 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h1><p>Ubuntu 17.04可以安装gnome shell on wayland，得知这个消息之后我立即扔掉了默认的桌面环境，切换到了gnome shell on wayland。至今已经使用了几个月，大部分情况下还算挺稳定，不过也遇到了一些问题：</p>
<ol>
<li>gnome-mplayer在wayland下无法工作，因为：it only works under X11</li>
<li>fcitx在所有的GTK和QT程序中都没法用，注意不是ctrl-space的问题，是没法用，但是在chromium中又可以正常使用</li>
<li>gnome-terminal如果开启透明背景，窗口四周的阴影无法征程渲染，会显示成一个相同宽度的白色边框</li>
</ol>
<p>其实除了第2点，其它的都可以忍，今天要在笔记本上写中文blog，只好又去放狗搜索解决方案，看到的问题分析有以下几类：</p>
<h2 id="fcitx没有正常启动"><a href="#fcitx没有正常启动" class="headerlink" title="fcitx没有正常启动"></a>fcitx没有正常启动</h2><p>这种情况下需要自己添加启动项，在gnome shell启动的时候去启动fcitx，否则chromium里面也不能用fcitx，但是我之前已经解决掉这个问题了（可以可以使用”GNOME 3 设置工具”来添加启动项）。</p>
<h2 id="不能使用CTRL-SPACE来切换输入法"><a href="#不能使用CTRL-SPACE来切换输入法" class="headerlink" title="不能使用CTRL-SPACE来切换输入法"></a>不能使用CTRL-SPACE来切换输入法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.settings-daemon.plugins.xsettings overrides <span class="string">&quot;&#123;&#x27;Gtk/IMModule&#x27;:&lt;&#x27;fcitx&#x27;&gt;&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<p>不过我这里不是切换的问题，是没法使用，另外在chromium中，这个快捷键切换fcitx是有效的，看起来之前我已经敲了一遍了。</p>
<h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 向~/.xprofile中间添加如下内容：</span></span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure>

<p>赶紧检查了一下，之前我已经添加过这3行内容了，但是<code>echo GTK_IM_MODULE</code>的结果依然为空，后来在arch linux的fcitx wiki上看到，对于新版本的gnome，需要把这三行加到<code>/etc/environment</code>这个文件中去……</p>
<p>添加，注销，重新登入，果然可以使用在gnome-terminal中使用fcitx了。</p>
]]></content>
      <tags>
        <tag>gnome_shell</tag>
        <tag>fcitx</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello github.io</title>
    <url>/2017/09/27/hello-github-io/</url>
    <content><![CDATA[<blockquote><p>“挥别blogspot，迎来github.io”</p>
</blockquote>

<p>好久没写blog乐，以前的blog在blogspot上，读者少的可怜，基本上还都是Google搜索CTeX引过去的，满满都是泪。</p>
<p>好在github对天朝网民来说，至少有时还是可见的，偶然间从知乎上看到Hux同学的blog，还挺好用的，之后又发现hexo + next也不错，遂愉快的开启github.io之旅。</p>
<p>大家好，我来了~</p>
]]></content>
      <categories>
        <category>non-tech</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>Python: Faster Way</title>
    <url>/2017/09/27/python-faster-way/</url>
    <content><![CDATA[<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><blockquote><p>“Thanks to zokis”</p>
</blockquote>

<h1 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h1><p>Python: faster way是一篇很有意思的文章，原项目的github地址在这里：<a href="https://github.com/zokis/Python--Faster-Way">zokis&#x2F;Python–Faster-Way</a>。</p>
<p>原来的项目可以自动将一些benchmark转换为Python虚拟机字节码形式，辅以运行时间告诉你哪些Python写法稍微快那么一点或者快很多，但是最近，原始的页面无法访问了。所以我决定在我的github.io上也放一份备查：</p>
<blockquote><p>看这里，看这里：<a href="/python-faster-way.html">Python: faster way</a></p>
</blockquote>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu从17.04升级到17.10</title>
    <url>/2017/11/05/ubuntu-upgrade-to-17-10/</url>
    <content><![CDATA[<p>Ubuntu 17.10出现有一段时间了，最近正好有空，决定把笔记本上的Ubuntu 17.04 + GNOME 3升级到17.10。因为GNOME 3不算很稳定，所以开始升级前就有心理准备，可能会出状况，反正有的是方法可以拯救数据，索性不备份直接用<code>do-release-upgrade</code>升级。</p>
<p>升级到一半，GNOME 3突然蹦了，<code>do-release-upgrade</code>突然不见了，够可以的……</p>
<p>好在打开一个UXTerm，心想这种时候应该还有一个screen&#x2F;tmux在后台吧？一查果然有，<code>screen -x</code>进去，升级正卡在闻某个配置文件是否需要更新的地方，一番操作加等待之后，升级顺利完成。</p>
]]></content>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu从18.04升级到18.10</title>
    <url>/2018/10/22/ubuntu-upgrade-to-1810/</url>
    <content><![CDATA[<p>不负众望呀，本人在公司的主力PC在从Ubuntu 18.04升级到Ubuntu 18.10时，又双叒叕扑街了，记得我之前也写过一篇blog记录：<a href="/2017/11/05/ubuntu-upgrade-to-17-10">Ubuntu从17.04升级到17.10</a>．</p>
<h1 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h1><p>按照<a href="https://www.omgubuntu.co.uk/2018/10/how-to-upgrade-to-ubuntu-18-10">How to Upgrade to Ubuntu 18.10 from Ubuntu 18.04 LTS</a>，首先修改更新配置，只要由新版本就更新：</p>
<blockquote>
<ol>
<li>Open the “Software &amp; Updates” app</li>
<li>Tap the “Updates” tab</li>
<li>Find the section titled “Notify me of a new Ubuntu version”</li>
<li>Set ‘For long-term support versions’ to ‘For any new version’</li>
<li>Click ‘Close’</li>
</ol>
</blockquote>
<p>接着：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo do-release-upgrade -d</span><br></pre></td></tr></table></figure>

<p>这次在升级过程中，一切顺利什么事没有，重启之后就宕机了。</p>
<span id="more"></span>

<h1 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h1><p>GRUB启动正常，选择进入Ubuntu之后，屏幕出现Ubuntu logo，若干秒之后，黑屏，刷启动各种service和systemd service的log，刷到dnsmasq之后，死机……</p>
<h1 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h1><p>重启进入recovery模式中的root终端，<code>ifconfig</code>使用不能，提示用<code>ip</code>或者装<code>net-tools</code><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。</p>
<p>好吧，试试<code>apt</code>，提示无法解析域名，查看<code>/etc/resolv.conf</code>中显示的内容是：</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line"># Generated by NetworkManager</span><br><span class="line">nameserver 127.0.0.53</span><br></pre></td></tr></table></figure>

<p>联想到正常启动时，死机之前最后的log，误以为是dnsmasq挂了，Google查了一下别人的解决方案，把<code>/etc/systemd/resolved.conf</code>各种改，什么<code>DNSStubListener=no</code>都尝试一边，一顿操作没有任何好转，考虑到<code>NetworkManager</code>臭名昭著，断网与此无关，可能和公司有线网的802.11x认证有关，觉得重新分析问题，不再纠结断网。</p>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>Google查找升级死机的时候，偶然看到有人提到nvidia，嗯，说不定又是它。一顿猛操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt purge nvidia*</span><br></pre></td></tr></table></figure>

<p>干掉了上百兆的NVidia相关包，内核启动镜像也重新生成了。重启之后，一切都正常了，但是我不信邪，加了最新nvidia显卡驱动的ppa源，把所有的版本nvidia驱动都试了一遍，果然除了自带的<code>Nouveau</code>，其它版本全部死机。好在<code>Nouveau</code>也可以用<code>gnome-shell</code>的特效，跑<code>Unity3D</code>也没什么问题，就这样吧，开心。</p>
<h1 id="btw"><a href="#btw" class="headerlink" title="btw"></a>btw</h1><p>升级完了之后，少不了一番折腾，比如干掉了难看的<code>GDM3</code>登陆界面背景图；解决了<code>Unity3D</code>无法启动的问题。</p>
<h2 id="编辑GDM3登录界面背景图"><a href="#编辑GDM3登录界面背景图" class="headerlink" title="编辑GDM3登录界面背景图"></a>编辑GDM3登录界面背景图</h2><p>编辑<code>/etc/alternatives/gdm3.css</code>中的<code>lockDialogGroup</code>：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#lockDialogGroup</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#2c001e</span> <span class="built_in">url</span>(<span class="string">file:///usr/share/backgrounds/Ubuntu_Party_de_Paris_by_Marcos_Costales.jpg</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-position</span>: center; &#125;</span><br></pre></td></tr></table></figure>

<h2 id="更新Unity3D"><a href="#更新Unity3D" class="headerlink" title="更新Unity3D"></a>更新Unity3D</h2><p><code>Unity3D</code>不能启动了，重新下载一个最新版的<a href="https://forum.unity.com/threads/unity-on-linux-release-notes-and-known-issues.350256/page-2#post-3662605">Unity-2018.2.7f1</a>，顺利打开，之前的工程也顺利导入。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol><li id="fn:1">原来我用了十几年的<code>ifconfig</code>早就被淘汰了，现在要用<code>ip</code>这个命令行工具，比如原来你看ip的命令是<code>ifconfig</code>，现在是<code>ip address show</code>，或者<code>ip a</code><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu中如何添加ppa源</title>
    <url>/2011/04/19/ubuntu%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0ppa%E6%BA%90/</url>
    <content><![CDATA[<ol>
<li><p>找到你需要的软件在<code>launchpad.net&#39;&#39;上的页面，比如用</code>Google’’搜索<code>ubunut Firefox ppa&#39;&#39;，能找到如下页面：[firefix ppa](https://launchpad.net/%7Eubuntu-mozilla-daily/+archive/ppa)2.  在页面上寻找下图红框中所示的</code><strong>ppa:ubuntu-mozilla-daily&#x2F;ppa</strong>‘’：</p>
<p><a href="/img/demo.png"><img src="/img/demo-small.png"></a></p>
</li>
<li><p>在&#96;&#96;ubuntu’’中打开终端，并且输入如下命令：&gt; sudo apt-add-repository ppa:ubuntu-mozilla-daily&#x2F;ppa&gt; sudo apt-get update&gt; sudo apt-get upgrade</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>ubuntu</tag>
        <tag>ppa</tag>
      </tags>
  </entry>
  <entry>
    <title>vim plugin evolution -- ycm</title>
    <url>/2018/10/14/vim-evolution-ycm/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为工作关系，本猪厂程序员常年在多个操作系统<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>和语言<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，框架<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>之前频繁切换，所以尽管已经有强如PyCharm和Android Studio这样好用的免费IDE可供使用，还是离不开Vim．</p>
<p>回归正题，既然Vim不得不用，被PyCharm和Android Studio宠坏了之后，就总会不自觉想把Vim变得和它们一样好用．或者更好一些;)</p>
<p>这个系列的文章主要记录采用各种Vim插件在两个方面增强Vim的使用体验：</p>
<ul>
<li>自动补全</li>
<li>搜索、导航</li>
</ul>
<ul>
<li>文件</li>
<li>符号</li>
<li>调用&#x2F;被调用(Caller and Callee)</li>
<li>文本</li>
</ul>
<p>最后也会记录一下其它小功能，比如显示缩进字符，pattern match次数什么的．</p>
<span id="more"></span>

<h1 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h1><h2 id="YouCompleteMe"><a href="#YouCompleteMe" class="headerlink" title="YouCompleteMe"></a>YouCompleteMe</h2><p>在YouCompleteMe出现之前，我试过非常多的Vim自动补全插件：</p>
<ul>
<li>基于ctags的<a href="https://www.vim.org/scripts/script.php?script_id=1520">OmniCppComplete</a></li>
<li>基于gcc的<a href="https://github.com/m2ym/gccsense">gccsense</a></li>
<li>基于clang的<a href="https://github.com/Rip-Rip/clang_complete">clang_complete</a></li>
</ul>
<p>没有对比就没有伤害，如果没有感受过Visual Assist那无比流畅和智能的补全效果，估计我会一直使用OmniCppComplete．可是偏偏被Visual Assist震撼过了，跑到BBS上讨论了一番，大家觉得，如果没有编译器支持的话，Vim想要获得接近Visual Assist的效果都很难．</p>
<p>Visual Assist官方演示视频：</p>
<iframe src="//www.youtube.com/embed/0hOztCPEi-0" frameborder="0" allowfullscreen=""></iframe>

<p>后来，我先后发现了gccsense和clang_complete，先说gccsense，安装比较麻烦，使用条件比较苛刻：</p>
<ul>
<li>Objective-C and Java or else which is supported in GCC is not supported</li>
<li>Development assist is not supported in a code which can not be compiled with GCC 4.4</li>
<li>Development assist is not available in header files.</li>
</ul>
<p>后者可用，可惜仅支持c&#x2F;c++这两门（一门？）语言，并且渐渐的也步了gccsense的后尘，不怎么维护了．</p>
<p>再后来就遇到<a href="https://github.com/Valloric/YouCompleteMe">YouCompleteMe</a>，迄今为止(2018年10月)还有上百位开发者在积极的开发功能．</p>
<p>以下是官方介绍：</p>
<blockquote>
<p>YouCompleteMe is a fast, as-you-type, fuzzy-search code completion engine for Vim. It has several completion engines:</p>
<ul>
<li>an identifier-based engine that works with every programming language,</li>
<li>a Clang-based engine that provides native semantic code completion for C&#x2F;C++&#x2F;Objective-C&#x2F;Objective-C++&#x2F;CUDA (from now on referred to as “the C-family languages”),</li>
<li>a Jedi-based completion engine for Python 2 and 3,</li>
<li>an OmniSharp-based completion engine for C#,</li>
<li>a combination of Gocode and Godef semantic engines for Go,</li>
<li>a TSServer-based completion engine for JavaScript and TypeScript,</li>
<li>a racer-based completion engine for Rust,</li>
<li>a jdt.ls-based experimental completion engine for Java.</li>
<li>and an omnifunc-based completer that uses data from Vim’s omnicomplete system to provide semantic completions for many other languages (Ruby, PHP etc.).</li>
</ul>
</blockquote>
<p>具体的安装和使用方法我就不写啦，官方的文档写的非常详细，照着做就好了，Windows平台不想自己编译可以去下载<a href="https://www.zhihu.com/question/25437050/answer/95662340">韦一笑编译版本</a>．这里我主要总结一下最蛋疼的C-Family自动补全配置．</p>
<h2 id="compilation-database-for-C-Family-auto-completion"><a href="#compilation-database-for-C-Family-auto-completion" class="headerlink" title="compilation database for C-Family auto completion"></a>compilation database for C-Family auto completion</h2><p>使用YCM<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>开发C-Family代码的时候有一个非常麻烦的地方－－需要<code>.ycm_extra_conf.py</code>，因为YCM借助了clang的力量，而这个过程中clang要知道怎么编译你当前编辑的文件(<code>compilation unit</code>)．</p>
<p><code>.ycm_extra_conf.py</code>内容多而且杂，不建议手写．要是每个工程都手写一遍能疯．github上有一个Vim插件项目可以帮助生成<code>.ycm_extra_conf.py</code>文件－－<a href="https://github.com/rdnetto/YCM-Generator">YCM-Generator</a>，但是很可惜，不是很好用，因为它在选cmake作为build system的时候总是漏掉各种参数，而选用make作为build system，要重新build一遍而且大概率生成失败，另外作者目前也不准备继续开发了．</p>
<p>幸运的是，这个需求不仅仅来源于YCM，比如Lint类的代码检查工具也需要借助编译器的力量，也需要提供<code>compilation database</code>，目前已知的生成<code>compilation database</code>的方法有：</p>
<ul>
<li>cmake</li>
<li>Bear</li>
<li>xcpretty</li>
</ul>
<h3 id="cmake"><a href="#cmake" class="headerlink" title="cmake"></a>cmake</h3><p>cmake如果将generator设置为<code>Unix Makefiles</code>或者<code>Ninja</code>，在生成工程的时候将<code>CMAKE_EXPORT_COMPILE_COMMANDS</code>设置为<code>ON</code>，就可以生成名为<code>compile_commands.json</code>的<code>compilation database</code>．</p>
<p>依据Prof. Dr. Karsten Borgwardt的blog: <a href="http://bastian.rieck.ru/blog/posts/2015/ycm_cmake/">YouCompleteMe and CMake</a>，对最外层的CMakeLists.txt做如下修改，即可以生成<code>compile_commands.json</code>，并且每次重新cmake之后可以按需更新源码路径下的<code>compile_commands.json</code>．</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- a/CMakeLists.txt</span></span><br><span class="line"><span class="comment">+++ b/CMakeLists.txt</span></span><br><span class="line"><span class="meta">@@ -4,6 +4,8 @@</span> project (Tutorials)</span><br><span class="line"></span><br><span class="line"> find_package(OpenGL REQUIRED)</span><br><span class="line"></span><br><span class="line"><span class="addition">+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"></span><br><span class="line"> if( CMAKE_BINARY_DIR STREQUAL CMAKE_SOURCE_DIR )</span><br><span class="line">	 message( FATAL_ERROR &quot;Please select another Build Directory ! (and give it a clever name, like bin_Visual2012_64bits/)&quot; )</span><br><span class="line"><span class="meta">@@ -773,3 +775,9 @@</span> elseif ($&#123;CMAKE_GENERATOR&#125; MATCHES &quot;Xcode&quot; )</span><br><span class="line"></span><br><span class="line"> endif (NOT $&#123;CMAKE_GENERATOR&#125; MATCHES &quot;Xcode&quot; )</span><br><span class="line"></span><br><span class="line"><span class="addition">+if( EXISTS &quot;$&#123;CMAKE_CURRENT_BINARY_DIR&#125;/compile_commands.json&quot; )</span></span><br><span class="line"><span class="addition">+  execute_process( COMMAND $&#123;CMAKE_COMMAND&#125; -E copy_if_different</span></span><br><span class="line"><span class="addition">+    $&#123;CMAKE_CURRENT_BINARY_DIR&#125;/compile_commands.json</span></span><br><span class="line"><span class="addition">+    $&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/compile_commands.json</span></span><br><span class="line"><span class="addition">+  )</span></span><br><span class="line"><span class="addition">+endif()</span></span><br></pre></td></tr></table></figure>

<p>对比较新版本的YCM，此种情况下不再需要<code>.ycm_extra_conf.py</code>：</p>
<blockquote>
<p>YCM looks for a file named ‘compile_commands.json’ in the directory of the<br>opened file or in any directory above it in the hierarchy (recursively); when<br>the file is found, it is loaded.</p>
</blockquote>
<h3 id="Bear"><a href="#Bear" class="headerlink" title="Bear"></a>Bear</h3><p><a href="https://github.com/rizsotto/Bear">Bear</a>，虽然只支持GNU make，但是用起来真是太简单了，比如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bear make -j32</span><br></pre></td></tr></table></figure>

<p>编译成功之后，当前路径下会生成<code>compile_commands.json</code>．</p>
<p>有趣的是，Bear的工作原理是直接hook住build命令的exec方法解析参数：</p>
<blockquote>
<p>Bear executes the original build command and intercepts the subsequent execution calls.  To achieve that Bear uses library preload mechanism provided by the dynamic linker.  There is a library which defines the  exec  methods<br>and used in every child processes of the build command.  The executable itself sets the environment up to child processes and writes the output file.</p>
</blockquote>
<p>btw: Bear源码中并没有限定死GNU make，理论上对cmake之外的build system应该都有效，说不定对xcodebuild也有效，只是需要注意：<a href="https://github.com/rizsotto/Bear/wiki/Usage#osx">Bear on OSX</a>．当然，接下来会说明我们在MacOS上的其它选择．</p>
<h3 id="xcpretty"><a href="#xcpretty" class="headerlink" title="xcpretty"></a>xcpretty</h3><p><a href="https://github.com/supermarin/xcpretty">xcpretty</a>，是一个处理xcodebuild输出的工具，处于持续开发中，号称比xcodebuild更新还要快，还要超前．</p>
<p>安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gem install xcpretty</span><br></pre></td></tr></table></figure>

<p>使用方法：</p>
<ol>
<li>首先clean你的XCode工程；</li>
<li><code>xcodebuild -project PROJECT_NAME.xcodeproj | xcpretty -r json-compilation-database --output compile_commands.json</code>；</li>
<li>把生成的<code>compile_commands.json</code>扔到工程源码的根目录．</li>
</ol>
<h2 id="swift"><a href="#swift" class="headerlink" title="swift"></a>swift</h2><p>YCM并不支持swift，于是<a href="https://github.com/jerrymarino">Jerry Marino</a>自己写了<a href="https://github.com/jerrymarino/iCompleteMe">iCompleteMe</a>：</p>
<blockquote>
<p>iCompleteMe is based on YouCompleteMe. After spending a over a year attempting to implement Swift support for YouCompleteMe, I found that it wasn’t possible to achieve ideal behavior under the conventions of YCM; iCM spawned.</p>
</blockquote>
<p>iCompleteMe可以与YCM共存，非常喜闻乐见的是，他还顺手写了一份解析XCode log生成可供iCompleteMe使用的<code>compile_commands.json</code>的工具：<a href="https://github.com/jerrymarino/XcodeCompilationDatabase">XcodeCompilationDatabase</a>．</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文主要列举了：</p>
<ol>
<li>选择YCM的心路历程；</li>
<li>YCM配置C-Family自动补全可以使用的一些工具，它们能极大的减轻配置的工作量；</li>
<li>用于swift，基于YCM的iCompleteMe．</li>
</ol>
<p>如果哪位发现本文由谬误或者由更好的推荐，欢迎留言或者邮件联络;)</p>
<div id="footnotes"><hr><div id="footnotelist"><ol><li id="fn:1">目前每天工作中用到的操作系统： Windows 10、MacOS、Debian、FreeBSD(谢天谢地，最近已经用不到了，奈何猪厂已上线的游戏就算没几个人玩也要持续维护很久，还得留着开发机)、Ubuntu(自用，btw: 猪厂自研游戏引擎支持Linux)<a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2">时不时在下述语言之间切换：Python, lua, c/c++, objective-c, c#, java, groovy, javascript(自用)<a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3">框架更是数不胜数，从自研游戏引擎，开源游戏引擎到各种服务端框架应有尽有，所以想体验彻底的全栈的感觉的哥们姐们，可以来猪厂游戏部门试试:)<a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4">YCM是YouCompleteMe的缩写<a href="#fnref:4" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <tags>
        <tag>vim</tag>
        <tag>YouCompleteMe</tag>
      </tags>
  </entry>
  <entry>
    <title>xelatex + beamer中的字体设置</title>
    <url>/2011/05/01/xelatex-beamer%E4%B8%AD%E7%9A%84%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>在Windows 7下，我是这么设置的(以下代码写在导言区)：</p>
<div class="highlight" style="background: #f8f8f8;"><pre style="line-height: 125%;"><span style="color: green; font-weight: bold;">\usepackage</span><span style="color: green;">{</span>xeCJK<span style="color: green;">}</span>
<span style="color: green; font-weight: bold;">\setCJKmainfont</span><span style="color: #7d9029;">[Mapping=tex-text]</span><span style="color: green;">{</span>Microsoft YaHei<span style="color: green;">}</span>
<span style="color: green; font-weight: bold;">\setCJKmonofont</span><span style="color: #7d9029;">[Mapping=tex-text]</span><span style="color: green;">{</span>SimSun<span style="color: green;">}</span>
<span style="color: green; font-weight: bold;">\setmainfont</span><span style="color: #7d9029;">[Mapping=tex-text]</span><span style="color: green;">{</span>TeX Gyre Pagella<span style="color: green;">}</span>
<span style="color: green; font-weight: bold;">\setmonofont</span><span style="color: #7d9029;">[Mapping=tex-text]</span><span style="color: green;">{</span>Courier New<span style="color: green;">}</span>
<span style="color: green; font-weight: bold;">\setsansfont</span><span style="color: #7d9029;">[Mapping=tex-text]</span><span style="color: green;">{</span>Trebuchet MS<span style="color: green;">}</span>
</pre></div>
需要说明的是：

<ul>
<li>假如你不喜欢这个字体配置或者你的操作系统里面么没有以上字体的话，改掉&#96;&#96;{}’’中的字体就可以了；</li>
<li>双引号的问题，xelatex编译beamer时不会将<code>&#39;&#39;自动转换为“”，这个让人很不适应，所以使用</code><span class="Apple-style-span" style="color: #7d9029; font-family: monospace; line-height: 16px; white-space: pre;">[Mapping&#x3D;tex-text]</span>‘’改回来。再来说字体大小，xelatex编译beamer的时候，里面的一些元素的字体大小十分O疼，比如图片的标题(caption)字体大小默认很大(生怕后排的人看不见…)，如果你的页面需要混排公式和图片的话，这个就是一个灾难。</li>
</ul>
<p>那么就手工改小吧，不过曾经在网上搜索到的一些方法已经失效了，没法偷懒找现成的方案就只能自己去翻《beamer user guide》，在<code>18.3.3&amp;nbsp;Setting Beamer’s Fonts&#39;&#39;部分有说明，大意是可以用</code>\setbeamerfont*{beamer-font name}{attributes}’’来设置beamer中各种元素的字体属性。以下是我的例子(同样需要添加在导言区)：</p>
<div class="highlight" style="background: #f8f8f8;"><pre style="line-height: 125%;"><span style="color: green; font-weight: bold;">\setbeamertemplate</span><span style="color: green;">{</span>caption<span style="color: green;">}</span>[numbered]
<span style="color: green; font-weight: bold;">\setbeamerfont</span><span style="color: green;">{</span>caption<span style="color: green;">}{</span>size=<span style="color: green; font-weight: bold;">\footnotesize</span><span style="color: green;">}</span>
<span style="color: green; font-weight: bold;">\setbeamerfont</span><span style="color: green;">{</span>captionname<span style="color: green;">}{</span>size=<span style="color: green; font-weight: bold;">\footnotesize</span><span style="color: green;">}</span>
</pre></div>

<ol>
<li>第一行给图片标题加了编号；</li>
<li>第二、三行把<code>caption&#39;&#39;和</code>captionname’’的字体大小改成了&#96;&#96;<span class="Apple-style-span" style="color: green; font-family: monospace; font-weight: bold; line-height: 16px; white-space: pre;">\footnotesize</span>‘’；</li>
<li>还可以改其它的字体属性，具体请参考用户手册。<div>不过这个时候就有一个大问题，我怎么知道beamer中到底有哪些元素？很遗憾，我在《beamer user guide》中没有找到相应的描述，难道要去翻源代码不成？好在我找到了一个网页：</div><div style="text-align: center;"><a href="http://www.gphysics.net/latex/beamer.html">http://www.gphysics.net/latex/beamer.html</a></div><div>里面列了一个很详细的表格，其中element那一项应该就是各种元素的名字，总之上面的<code>caption&#39;&#39;和</code>captionname’’都是这么找到的…</div></li>
</ol>
]]></content>
      <tags>
        <tag>tex</tag>
      </tags>
  </entry>
  <entry>
    <title>xelatex + beamer中的导航按钮</title>
    <url>/2011/05/01/xelatex-beamer%E4%B8%AD%E7%9A%84%E5%AF%BC%E8%88%AA%E6%8C%89%E9%92%AE/</url>
    <content><![CDATA[<h1 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h1><p>在使用beamer制作Presentation的幻灯片页面中，导航按钮(官方名称是：navigation symbols)是非常重要的一个页面元素，在默认的情况下，每一页幻灯片都会有这些按钮：</p>
<div class="separator" style="clear: both; text-align: center;">[![](/img/frame_page_small.png)](/img/frame_page.png)</div>
<div class="separator" style="clear: both; text-align: left;"></div>
<div class="separator" style="clear: both; text-align: left;">上图中各个按钮解释如下(摘自beamer user guide --&gt;&nbsp;8.2.4&nbsp;The Navigation Symbols)：</div>

<ol>
<li>A slide icon，点击中间的方框将弹出一个对话框，询问你想要跳转到文档的第几页，点击方框的左右两边的箭头将跳转到前一页或者后一页幻灯片；</li>
<li>A frame icon，点击左侧箭头将跳转到当前frame的第一页幻灯片，点击右侧箭头将跳转到当前frame的最后一页幻灯片，当同一个frame中有多页幻灯片的时候(比如使用了&#96;&#96;\pause’’之类的Overlay手段)，这连个按钮是很有用的；</li>
<li>&nbsp;A subsection icon，点击左侧箭头将跳转到当前subsection的第一页幻灯片，点击右侧箭头将跳转到当前subsection的最后一页幻灯片；</li>
<li>A section icon，点击左侧箭头将跳转到当前section的第一页幻灯片，点击右侧箭头将跳转到当前section的最后一页幻灯片；</li>
<li>A presentation icon，点击左侧图标将跳转到第一页幻灯片，点击右侧图标将跳转到的最后一页(不包含附录)幻灯片；</li>
<li>左侧类似撤销箭头一般的图标表示跳转到刚刚播放过的幻灯片页面，右侧按钮效果类似，点击中间查找模样的图标，将弹出对话框(或者在屏幕上方显示工具栏)，可以在其中输入关键词进行全文查找。</li>
</ol>
<p>注意，在一些pdf浏览器中，这些按钮的部分或者全部功能是得不到支持的，比如sumatraPDF，所以在做Presentation的时候最好使用okular或者adobe reader。</p>
<p>正如标题中所暗示到的，使用xelatex编译的beamer的时候，这个导航按钮会失效，具体原因可以参考这个帖子：</p>
<div style="text-align: center;">[[幻灯片] 解决beamer在XeLaTeX中导航条按钮失效问题](http://bbs.ctex.org/forum.php?mod=viewthread&tid=64104)</div><div style="text-align: left;"></div>

<p>上文也提到了解决方案，在导言区(Preamble)加入如下代码即可：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\makeatletter</span></span><br><span class="line"><span class="keyword">\def</span><span class="keyword">\beamer@linkspace</span><span class="params">#1</span>&#123;<span class="comment">%</span></span><br><span class="line">	<span class="keyword">\begin</span>&#123;pgfpicture&#125;&#123;0pt&#125;&#123;-1.5pt&#125;&#123;<span class="params">#1</span>&#125;&#123;5.5pt&#125;</span><br><span class="line">		<span class="keyword">\pgfsetfillopacity</span>&#123;0&#125;</span><br><span class="line">		<span class="keyword">\pgftext</span>[x=0pt,y=-1.5pt]&#123;.&#125;</span><br><span class="line">		<span class="keyword">\pgftext</span>[x=<span class="params">#1</span>,y=5.5pt]&#123;.&#125;</span><br><span class="line">	<span class="keyword">\end</span>&#123;pgfpicture&#125;&#125;</span><br><span class="line"><span class="keyword">\makeatother</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>tex</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么治愈的旋律对应让人发毛的歌词...</title>
    <url>/2011/02/15/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%B2%BB%E6%84%88%E7%9A%84%E6%97%8B%E5%BE%8B%E5%AF%B9%E5%BA%94%E8%AE%A9%E4%BA%BA%E5%8F%91%E6%AF%9B%E7%9A%84%E6%AD%8C%E8%AF%8D/</url>
    <content><![CDATA[<p>多少次深夜12点戴着耳机播放岩男润子的这首歌从漆黑的文正楼五楼抹黑走进电梯，要是以前知道歌词的中文意思的话可不敢这么干</p>
<p>不过其实从整体上看，歌词还是很温馨的，也许冰箱门的开开关关是人家自己打开的哈</p>
<p>以下歌词以及翻译转自：<a href="http://blog.yam.com/misuno/article/20819760">http://blog.yam.com/misuno/article/20819760</a><br>パタパタ　　（岩男潤子コンサート　Ｋｉｍｏｃｈｉ）</p>
<p>作詞：岩男潤子<br>作曲：谷山浩子</p>
<p>パタパタ…  冷蔵庫のとびら<br>啪答啪答…  冰箱的門</p>
<p>パタパタ…  あけたり閉めたり<br>啪答啪答…  開開關關</p>
<p>パタパタ…　何をしてるのわたし ここで<br>啪答啪答…  我到底在這裡做什麼呢</p>
<p>真夜中2時20分　   冷たい床にすわりこんで<br>半夜的兩點二十分  跌坐在冰冷的地板上</p>
<p>あなたのことばかりずっと考えてる<br>腦中不斷想著你的事情</p>
<p>3日前に買ったリンゴ  食べかけのチーズ<br>三天前買的蘋果 正要吃的起司</p>
<p>半分に切った人参  1つのこったじゃがいも<br>切掉一半的紅蘿蔔  只剩一個的馬鈴薯</p>
<p>今どこにいるの？　誰の側にいるの？<br>現在在哪裡呢  在誰的身邊呢</p>
<p>笑ってるの？　怒ってるの？<br>正笑著嗎 還是生著氣呢</p>
<p>誰の夢　見て眠るの<br>是有誰入夢而睡著呢</p>
<p>会いたいよ　とても　会いたいよ　あなたに<br>好想見你 非常的 想要見你</p>
<p>胸の奥の　とびらの音<br>胸口深處 門扉的聲音</p>
<p>パタパタパタ…<br>啪答啪答啪答…</p>
<p>ソワソワ…　ベランダのとびら<br>坐立不安      陽台的門</p>
<p>ソワソワ…  あけたり閉めたり<br>坐立不安     開開關關</p>
<p>ソワソワ…　どうしたんだろうわたし　ここで<br>坐立不安     在這裡的我到底怎麼了呢</p>
<p>真夜中3時50分　  冷たい風を受けながら<br>半夜的三點五十分 迎著寒冷的夜風</p>
<p>あなたのことばかりずっと　考えてる<br>腦中不斷想著你的事情</p>
<p>植木バチのしおれた花　くもるガラス窓<br>花盆裡枯萎的花        泛著白霧的玻璃窗</p>
<p>星1つも見えない空　    光る車のライト<br>一個星星都看不見的天空 發著光的車燈</p>
<p>今どこにいるの？　誰の側にいるの？<br>現在在哪裡呢  在誰的身邊呢</p>
<p>笑ってるの？　怒ってるの？<br>正笑著嗎 還是生著氣呢</p>
<p>誰の夢 見て眠るの<br>是有誰入夢而睡著呢</p>
<p>会いたいよ　とても　会いたいよ　あなたに<br>好想見你 非常的 想要見你</p>
<p>止められない　とびらの音<br>無法停歇的 門扉的聲音</p>
<p>パタパタパタ…<br>啪答啪答啪答…</p>
<p>(感謝Seraph中譯)</p>
]]></content>
      <tags>
        <tag>anime</tag>
      </tags>
  </entry>
  <entry>
    <title>从娃娃抓起...</title>
    <url>/2012/04/14/%E4%BB%8E%E5%A8%83%E5%A8%83%E6%8A%93%E8%B5%B7/</url>
    <content><![CDATA[<p>从娃娃抓起，让大家从小苦逼，天朝已经输出价值观喽……</p>
<p>现在无论是IT码农们还是设计师们，都开始把魔爪伸向了下一代，闲逛的时候发现三本书：</p>
<invent python="" with="">
[Invent with Python](http://inventwithpython.com/)</invent>
“Invent with Python” was written to be understandable by <span style="color: red;">kids as young  as 10 to 12 years old</span>, although it is great for anyone of any age who  has never programmed before.

<p>还有一个更发指的在线教程：<br><span style="font-size: small;"><a href="http://python4kids.wordpress.com/">Python Tutorials for Kids 8+</a>，8岁呀…本应该是每天轻松搞定作业然后花大把大把时间去扔沙包踢足球下河游泳的岁月…还好我爸不是程序员…</span></p>
<p><a href="http://imprint.printmag.com/daily-heller/lenfant-graphic-designer/"><em>Design Dossier: Graphic Design for Kids</em></a><br>人家作者说了：_<br>_</p>
<blockquote>
<p>It is never too early to corral kids into the design world. The earlier you start, the more literate they will be.不过相对于上面那几本书，这个要好多了，至少不用敲代码…</p>
</blockquote>
<p>最后是上面这本书的作者的最新力作……<br><a href="http://www.amazon.com/Design-Dossier-Architecture-Dossiers/dp/0977790533"><em>Design Dossier: Architecture for kids</em></a></p>
<p>亲，配套模型哦<del>印刷精美哦</del></p>
<p>虽然是写给小孩看的，但是我觉得类似我这样的建筑白痴看看也不错…</p>
<p>对了，最后这本的详细介绍见：<a href="http://imprint.printmag.com/daily-heller/architecture-for-ages-10-and-older/"><span style="font-size: small;">Architecture for Ages 10 and Older</span></a><span style="font-size: small;"> </span><br>_<br>_</p>
]]></content>
      <tags>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>在Vim中使用omnifunc对python自动补全</title>
    <url>/2011/05/12/%E5%9C%A8Vim%E4%B8%AD%E4%BD%BF%E7%94%A8omnifunc%E5%AF%B9python%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</url>
    <content><![CDATA[<p>如果希望在使用Vim编辑python源码的时候能够获得自动补全功能，你并不需要安装第三方插件，从Vim 7开始，自带的’omnifunc’既可以提供这一利器。步骤：</p>
<ol>
<li><p><strong>确认你的Vim编译的时候包含了 <code>+eval</code>，<code>+insert_expand</code>，<code>python</code></strong><br>当然如何确定自己机器上的Vim已经在编译时打开这三个选项了呢？在命令行模式输入<code>:version</code>后回车即可。但是对于<code>+python</code>的确定要稍微麻烦一些，光看到<code>+python</code>还不够，应该在命令行中执行一条python语句确认一下<code>:py print &quot;hentai&quot;</code>，假如执行之后没有报错，没有崩溃，并且最下一栏显示了<code>hentai</code>，那么恭喜你，<code>+python</code>特性是没有问题的；如果报错、崩溃(从Vim中退出之类的)，那么可能你遇到了如下的问题(这种情况下你很可能是用的Windows，用有包管理工具的Linux很难遇到这类问题)：<br>a.  python版本不兼容，这种情况是<code>+python/dyn</code>引发的，也就是说Vim中对python特性的支持是靠动态链接系统中python动态链接库来实现的，比如我装的Vim 7.3要求<code>python 2.7.dll</code>。不想重编译Vim的话就换匹配的python吧(这个可以在执行<code>:py print &quot;hentai&quot;</code>时看到提示的)<br>b.  假如你用的是64bit的Windows系统，然后用了32bit的Vim，再用了64bit的python，肯定会出问题，解决的方法比较简单把Vim换成64bit版本吧<br>c.  Vim编译进了<code>+python/dyn</code>和<code>+python3/dyn</code>两个选项也可能(<strong>注意：这里是可能，我只是搜索的时候看到有人提过</strong>)导致问题(官方的安装包就是这样的)，重编译Vim，关掉一个选项(关掉哪个要看你系统没装哪个)</p>
</li>
<li><p><strong>在.vimrc(用Linux的话)或者_vimrc(用Windows的话)中加入以下设置</strong>：</p>
</li>
</ol>
<div><span class="Apple-style-span" style="color: white; font-family: monospace;"></span>
<pre style="background-color: #333333; color: white; font-family: monospace;"><span class="Comment" style="color: skyblue;">""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""</span>
<span class="Comment" style="color: skyblue;">" For editing python</span>
<span class="Comment" style="color: skyblue;">""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""</span>
<span class="Statement" style="color: khaki; font-weight: bold;">filetype</span> <span class="Type" style="color: darkkhaki; font-weight: bold;">plugin</span> <span class="Type" style="color: darkkhaki; font-weight: bold;">indent</span> <span class="Type" style="color: darkkhaki; font-weight: bold;">on</span>
<span class="Statement" style="color: khaki; font-weight: bold;">set</span> <span class="PreProc" style="color: indianred;">completeopt</span>+=longest
<span class="Statement" style="color: khaki; font-weight: bold;">set</span> <span class="PreProc" style="color: indianred;">completeopt</span>+=menu
<span class="Statement" style="color: khaki; font-weight: bold;">set</span> <span class="PreProc" style="color: indianred;">wildmenu</span>
<span class="Statement" style="color: khaki; font-weight: bold;">autocmd</span> <span class="Type" style="color: darkkhaki; font-weight: bold;">FileType</span> python <span class="Statement" style="color: khaki; font-weight: bold;">set</span> <span class="PreProc" style="color: indianred;">omnifunc</span>=pythoncomplete#Complete</pre></div><div>> 如果发现补全完毕之后提示窗口没有自动关闭，就加上下面这两行(从stackoverflow上看到的)：
<div style="background-color: #333333; color: white; font-family: monospace;"><pre style="background-color: #333333; color: white; font-family: monospace;"><span class="Comment" style="color: skyblue;">" If you prefer the Omni-Completion tip window to close when a selection is</span>
<span class="Comment" style="color: skyblue;">" made, these lines close it on movement in insert mode or when leaving</span>
<span class="Comment" style="color: skyblue;">" insert mode</span>
<span class="Statement" style="color: khaki; font-weight: bold;">autocmd</span> <span class="Type" style="color: darkkhaki; font-weight: bold;">CursorMovedI</span> * <span class="Statement" style="color: khaki; font-weight: bold;">if</span> <span class="Identifier" style="color: palegreen;">pumvisible</span><span class="Special" style="color: navajowhite;">()</span> <span class="Statement" style="color: khaki; font-weight: bold;">==</span> <span class="Constant" style="color: #ffa0a0;">0</span>|<span class="Statement" style="color: khaki; font-weight: bold;">pclose</span>|<span class="Statement" style="color: khaki; font-weight: bold;">endif</span>
<span class="Statement" style="color: khaki; font-weight: bold;">autocmd</span> <span class="Type" style="color: darkkhaki; font-weight: bold;">InsertLeave</span> * <span class="Statement" style="color: khaki; font-weight: bold;">if</span> <span class="Identifier" style="color: palegreen;">pumvisible</span><span class="Special" style="color: navajowhite;">()</span> <span class="Statement" style="color: khaki; font-weight: bold;">==</span> <span class="Constant" style="color: #ffa0a0;">0</span>|<span class="Statement" style="color: khaki; font-weight: bold;">pclose</span>|<span class="Statement" style="color: khaki; font-weight: bold;">endif</span>
</pre></div></div>到这里就大功告成了，补全的按键组合是`Ctrl-X Ctrl-O`，只要系统中安装好的python库都能补全，效果如下(左侧边栏靠的taglist实现)：
<div class="separator" style="clear: both; text-align: center;">[![](/img/omni_small.png)](/img/omni.png)</div>
]]></content>
  </entry>
  <entry>
    <title>在ubuntu上安装texlive和ctex-kit</title>
    <url>/2011/10/06/%E5%9C%A8ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85texlive%E5%92%8Cctex-kit/</url>
    <content><![CDATA[<p>texlive与ctex-kit的搭配，应该是我接触过的最简单、优雅的Linux TeX中文方案，水木TeX版置底推荐的也是这个。</p>
<p>但是以前在Ubuntu下安装的过程依然有些不上路子，因为诸如Debian、Ubuntu在内的各大Linux发行版软件仓库中，texlive的版本一度十分古老，所以假如想很顺利的用上texlive+ctex-kit的话，大家不得不自己下载texlive的镜像来安装。这样做的一个最直接的问题就是当你需要安装诸如apt源当中的vim-latexsuite的时候，你需要手工构建一个空包，欺骗包管理工具，让它以为你已经从apt源里面安装了texlive，这个方法多少有些快糙猛……</p>
<p>即使到了今天，我尝试过Ubuntu 11.10 beta 2之后，事情依然没有改观，Ubuntu官方的文档上时这么写的：</p>
<blockquote>
<p><em>Note</em>: As of July 2011 the <tt>texlive</tt> package that ships with Ubuntu (TeX Live 2009) is <a href="https://bugs.launchpad.net/ubuntu/+source/texlive-base/+bug/712521"><u><span style="color: #0066cc;">lagging two years behind the current TeX Live release</span></u></a> (TeX Live 2011). If you want the latest version of TeX Live, you can install it directly from <a href="http://www.tug.org/texlive/"><u><span style="color: #0066cc;">the TeX Live website</span></u></a> (this does not interfere with the packages in Ubuntu).所以我还是选择了从iso直接安装，以下是安装步骤：</p>
</blockquote>
<h1 id="0-准备工作"><a href="#0-准备工作" class="headerlink" title="0.准备工作"></a><span style="font-size: large;">0.准备工作</span></h1><p>首先，为了能使用texlive自带的聊胜于无的图形安装界面，Ubuntu用户需要安装perl-tk这个软件包(当然，喜欢文本安装的同学可以跳过这一步)：</p>
<blockquote>
<p>sudo apt-get install perl-tk</p>
</blockquote>
<h1 id="1-下载texlive-2011-DVD-iso"><a href="#1-下载texlive-2011-DVD-iso" class="headerlink" title="1.下载texlive 2011 DVD iso"></a><span style="font-size: large;">1.下载texlive 2011 DVD iso</span></h1><p>对于大陆教育网的用户来说，ipv6网络真是好东西，不仅免费，速度还一级棒，兼顾自动翻墙，texlive的镜像也可以从中科大的镜像下载：<br><a href="http://mirrors6.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2011.iso">http://mirrors6.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2011.iso</a></p>
<h1 id="2-挂载iso"><a href="#2-挂载iso" class="headerlink" title="2.挂载iso"></a><span style="font-size: large;">2.挂载iso</span></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/foo/bar&gt; <span class="built_in">mkdir</span> CDROM&gt; sudo mount -t iso9660 /path/to/your/texlive2011.iso /home/foo/bar/CDROM</span><br></pre></td></tr></table></figure>

<h1 id="3-安装texlive-2011"><a href="#3-安装texlive-2011" class="headerlink" title="3.安装texlive 2011"></a><span style="font-size: large;">3.安装texlive 2011</span></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="built_in">cd</span> /home/foo/bar/CDROM&gt; ./install-tl --gui=wizard</span><br></pre></td></tr></table></figure>
<p>然后，接下来的事情就比较简单了，一路下一步，直到<code>完成</code>。</p>
<h1 id="4-设置PATH环境变量"><a href="#4-设置PATH环境变量" class="headerlink" title="4.设置PATH环境变量"></a><span style="font-size: large;">4.设置PATH环境变量</span></h1><p>因为texlive 2011的可执行程序默认是安装在&#x2F;usr&#x2F;local&#x2F;texlive&#x2F;2011&#x2F;bin&#x2F;i386-linux下的，所以需要修改path环境变量才能直接在shell中调用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/texlive/2011/bin/i386-linux</span><br></pre></td></tr></table></figure>
<p>这一行最好是加到你的<code>~/.bashrc</code>中去，以后省得麻烦。</p>
<h1 id="5-下载-安装ctex-kit"><a href="#5-下载-安装ctex-kit" class="headerlink" title="5.下载&amp;安装ctex-kit"></a><span style="font-size: large;">5.下载&amp;安装ctex-kit</span></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/texmf/tex/latex</span><br><span class="line"><span class="built_in">cd</span> ~/texmf/tex/latex</span><br><span class="line">svn co http://ctex-kit.googlecode.com/svn/trunk/ctex</span><br></pre></td></tr></table></figure>
<p>自此，ctex-kit就装好了，非常简单。</p>
<h1 id="6-安装Adobe字体-原始链接：这里"><a href="#6-安装Adobe字体-原始链接：这里" class="headerlink" title="6.安装Adobe字体(原始链接：这里)"></a><span style="font-size: large;">6.安装Adobe字体(原始链接：<a href="http://www.newsmth.net/bbscon.php?bid=460&amp;id=299823">这里</a>)</span></h1><p>从这里找到字体下载的链接：</p>
<blockquote>
<p><a href="http://bbs.ctex.org/viewthread.php?tid=47618">http://bbs.ctex.org/viewthread.php?tid=47618</a></p>
</blockquote>
<p>它们分别是：</p>
<ul>
<li>AdobeFangsongStd-Regular.otf</li>
<li>AdobeHeitiStd-Regular.otf</li>
<li>AdobeKaitiStd-Regular.otf</li>
<li>AdobeSongStd-Light.otf</li>
</ul>
<p>在用户主目录下建立如下子目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~/.fonts/adobefonts/</span><br></pre></td></tr></table></figure>

<p>将Adobe的四款字体解压到该子目录，安装字体：      </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.fonts/adobefonts/       </span><br><span class="line">sudo mkfontscale       </span><br><span class="line">sudo mkfontdir       </span><br><span class="line">sudo fc-cache -fv</span><br></pre></td></tr></table></figure>

<p>安装完成后可以用      </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fc-list :lang=zh|grep -v <span class="string">&#x27;Adobe&#x27;</span></span><br></pre></td></tr></table></figure>
<p>检查一下</p>
<h1 id="7-用一个简单的例子试一下吧-原始链接：这里"><a href="#7-用一个简单的例子试一下吧-原始链接：这里" class="headerlink" title="7.用一个简单的例子试一下吧(原始链接：这里)"></a><span style="font-size: large;">7.用一个简单的例子试一下吧(原始链接：<a href="http://www.newsmth.net/bbscon.php?bid=460&amp;id=299823">这里</a>)</span></h1><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[adobefonts]&#123;ctexart&#125;      </span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;       </span><br><span class="line">你好，TeX Live 2009！       </span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p>在命令行下用 xelatex test.tex 进行编译，如果顺利的话，就得到了pdf文件。</p>
<p>Note:</p>
<ol>
<li>Adobe的字体部分请各位三思，我先是用Google搜了半天，然后有到Adobe官网翻了一遍，也没搜到上面这四款字体是收费还是免费的，担心版权问题的同学还是老老实实用文泉驿字体，贴在这里是因为ctex-kit中刚好有ctex-xecjk-adobefonts.def，觉得可能是免费使用的。</li>
<li>如果需要在Linux下面使用gvim + latex-suite的同学，可以参考<a href="http://bbs.seu.edu.cn/bbscon.php?bid=230&amp;id=3209">这篇文章</a>。但是因为是去年写的，现在的texrc以及compiler都有少许不同了。比如前向搜索，现在okular和synctex之间的衔接除了点问题：<a href="https://bugs.archlinux.org/task/25125">Synctex Forward-search is not working (Kile + Okular)</a> ，里面提到的可能的解决方案我也试了，暂时无解，只有等上游的okular更新了；反向搜索还是没有问题的。</li>
</ol>
]]></content>
      <tags>
        <tag>ubuntu</tag>
        <tag>tex</tag>
      </tags>
  </entry>
  <entry>
    <title>如何干净的修改ubuntu中gcc的版本</title>
    <url>/2010/05/03/%E5%A6%82%E4%BD%95%E5%B9%B2%E5%87%80%E7%9A%84%E4%BF%AE%E6%94%B9ubuntu%E4%B8%ADgcc%E7%9A%84%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<p>这里要介绍的方法是update-alternatives[准确的说，应该是伟大的debian发行版的成员]。<br>man update-alternatives就会知道：</p>
<blockquote>
<p>update-alternatives - maintain symbolic links determining default commands要改大便系统的gcc版本，首先就需要把对应版本的gcc给装上[这个命令大家都知道吧]，假设原来系统的gcc版本是4.3，然后你新装了4.1的，那么输入如下命令:</p>
<pre>sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.3 40
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.1 30
sudo update-alternatives --config gcc
</pre>
</blockquote>
<p>现在，你需要的仅仅是按照提示将gcc默认指向的文件从4.3改为4.1即可。话说以前我都是直接改链接的，总觉得有点脏…</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>学Web，去W3Schools！</title>
    <url>/2012/01/28/%E5%AD%A6Web%EF%BC%8C%E5%8E%BBW3Schools%EF%BC%81/</url>
    <content><![CDATA[<blockquote>
<p>学黑客，去蓝翔！<br>学厨师，去新东方！<br>……<br>学Web，去<a href="http://www.w3schools.com/default.asp">W3Schools</a>！</p>
</blockquote>
<p>除了最后一句，其它都是说笑的;)</p>
<span id="more"></span>

<p>作为一个IT工程师，懂Web是必须的，想学Web，需要按部就班的把前端、后端统统看一遍。大二的时候曾抱着一本HTML手册从头翻到尾，看完立马全忘了，现在回想确实是傻了一点。至少犯了两个大忌：</p>
<ol>
<li>拿参考书来当教材是万万不能的；</li>
<li>不动手实践是万万不能的。通过<a href="http://www.w3schools.com/default.asp">W3Schools</a>学习Web可以避免以上两者，在这里先贴一下W3Schools提供的教程列表(摘自首页，可能不全):</li>
</ol>
<blockquote>
<h2 id="HTML-Tutorials"><a href="#HTML-Tutorials" class="headerlink" title="HTML Tutorials"></a><span style="color: #92b901;">HTML</span> Tutorials</h2><p>Learn HTML<br>Learn HTML5<br>Learn CSS<br>Learn CSS3<br>Learn TCP&#x2F;IP</p>
<h2 id="Browser-Scripting"><a href="#Browser-Scripting" class="headerlink" title="Browser Scripting"></a><span style="color: #92b901;">Browser</span> Scripting</h2><p>Learn JavaScript<br>Learn HTML DOM<br>Learn DHTML<br>Learn VBScript<br>Learn AJAX<br>Learn jQuery<br>Learn JSON</p>
<h2 id="XML-Tutorials"><a href="#XML-Tutorials" class="headerlink" title="XML Tutorials"></a><span style="color: #92b901;">XML</span> Tutorials</h2><p>Learn XML<br>Learn DTD<br>Learn XML DOM<br>Learn XSLT<br>Learn XPath<br>Learn XQuery<br>Learn XLink<br>Learn XPointer<br>Learn Schema<br>Learn XSL-FO<br>Learn SVG</p>
<h2 id="Server-Scripting"><a href="#Server-Scripting" class="headerlink" title="Server Scripting"></a><span style="color: #92b901;">Server</span> Scripting</h2><p>Learn SQL<br>Learn ASP<br>Learn ADO<br>Learn PHP<br>Learn ASP.NET<br>Learn Razor<br>Learn .NET Mobile</p>
<h2 id="Web-Services"><a href="#Web-Services" class="headerlink" title="Web Services"></a><span style="color: #92b901;">Web</span> Services</h2><p>Learn Web Services<br>Learn WSDL<br>Learn SOAP<br>Learn RSS<br>Learn RDF</p>
</blockquote>
<p>还是挺全的吧，对于每一个教程，都有循序渐进分章节讲解，但是这个不是最出彩的，最出彩的是所有例子下面都有的<code>Try it yourself</code>按钮！在学中练，在练中学，比自己用Firebug慢慢一点点分析复杂的网页快多了！ </p>
<div class="separator" style="clear: both; text-align: center;">[![](/img/Tryit_Editor_small.PNG)](/img/Tryit_Editor.PNG)</div>
<div class="separator" style="clear: both; text-align: center;">[![](/img/Examples_small.PNG)](/img/Examples.PNG)</div>

<p>也不得不感叹现在这个浏览器为王的年代，各种Web应用也太Bug了，难怪前两天Google Currents上一篇文章建议出版商选HTML5作为Multimedia Textbook的载体而不是苹果的专有格式。</p>
]]></content>
      <tags>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>开发GNU Radio模块遇到的其它问题</title>
    <url>/2012/10/15/%E5%BC%80%E5%8F%91GNU-Radio%E6%A8%A1%E5%9D%97%E9%81%87%E5%88%B0%E7%9A%84%E5%85%B6%E5%AE%83%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="告别修改howto模块的历史"><a href="#告别修改howto模块的历史" class="headerlink" title="告别修改howto模块的历史"></a>告别修改howto模块的历史</h1><p>相信很多人在看完GNU Radio模块开发方面的文档之后，会出现“好麻烦啊”这样的想法。这也难怪，光是教学性质的<strong>gr-howto-write-a-block</strong>模块，就拥有7个子目录，108个文件。所以有一些同学是直接通过修改howto模块来开发自己的模块的，以此来减少一些体力劳动。</p>
<p>好在在<a href="https://www.cgran.org/">CGRAN</a>上收集的项目中，我发现了这个方便的工具<a href="https://www.cgran.org/wiki/devtools">devtools</a>：</p>
<blockquote>
<p><span style="background-color: white; font-family: Arial, Verdana, Geneva, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 14px; line-height: 19.03333282470703px; widows: 4;">This project aims to provide tools, helper, scripts and scriplets to aid the development of GNU Radio.</span></p>
</blockquote>
<p>简而言之，devtools通过提供名为modtool.py的工具，为各位开发者提供了一个快速生成模块骨架的手段。关于这个工具的简要介绍，可以参考<a href="https://www.cgran.org/wiki/devtools">这里</a>，余下部分将简要介绍如何生成一个source模块的。</p>
<span id="more"></span>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>想要获得最新版本的话，请从其<a href="https://github.com/mbant/gr-modtool">项目主页</a>(github)上下载最新版本的<a href="https://github.com/mbant/gr-modtool/blob/master/gr_modtool.py" title="gr_modtool.py">gr_modtool.py</a>文件即可。注意，只需要这一个python文件即可；</li>
<li>把<a href="https://github.com/mbant/gr-modtool/blob/master/gr_modtool.py" title="gr_modtool.py">gr_modtool.py</a>文件扔到PATH中的一个路径即可，如此既安装完毕。</li>
</ol>
<h2 id="使用工具自动生成模块框架"><a href="#使用工具自动生成模块框架" class="headerlink" title="使用工具自动生成模块框架"></a>使用工具自动生成模块框架</h2><ol>
<li>切换到合适的路径，比如~&#x2F;Workspace&#x2F;</li>
<li>生成(Module)，假如你决定将自己的Module命名为PT，那么运行<code>gr_modtool.py create PT</code>之后，可以在当前路径下看到子目录<code>gr-PT</code>，结构如图一所示；</li>
<li>为Module添加Block(信号处理的模块)，这一步才是最关键的步骤。如前文所述，我们假设现在要添加一个信号源模块，于是运行<code>gr_modtool.py add -d gr-PT/ -n PT -N simple_source -t source</code>，其中<code>add</code>表示向PT module中添加block，而<code>PT</code>则是module名，<code>simple_source</code>表示需要添加的block名，<code>-t source</code>表示添加的block类型是一个源；</li>
<li>回车之后会要求输入参数列表(argument list)，也就是block构造函数的参数列表，在这里我们输入<code>int frequency</code>。其实输入参数带默认值也是可以的，比如<code>int val1, double val2=0</code>；</li>
<li>之后还会询问是否需要生成Python或者C++的qa文件，一路回车即可；</li>
<li>如此便大功告成，比如在<code>lib</code>路径下会多出<code>PT_simple_source.cc</code>和<code>qa_PT_simple_source.cc</code>两个文件，而其它的相关文件也会被悉数添加。不仅如此，最贴心的功能莫过于各种源文件中需要修改的地方都加了Vim的place holder，如图二所示。</li>
</ol>
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;">[![PT module directory tree structure](/img/new_module_structure.jpg "图一 新生成Module结构")](/img/new_module_structure.jpg)</td></tr><tr><td class="tr-caption" style="text-align: center;">图一 PT module文件结构</td></tr></tbody></table><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;">[![](/img/place_holder.jpg)](/img/place_holder.jpg)</td></tr><tr><td class="tr-caption" style="text-align: center;">图二 贴心的place holder</td></tr></tbody></table><div>如果想要获取更详细的介绍，可以到[devtools](https://www.cgran.org/wiki/devtools)这里查看里面的例子，或者`modtool.py help add`或者RTFC。

<h2 id="编译模块可能遇到的问题"><a href="#编译模块可能遇到的问题" class="headerlink" title="编译模块可能遇到的问题"></a>编译模块可能遇到的问题</h2><p>之前在编译gr-chancoding模块的时候，还遇到过一个比较常见的问题，.&#x2F;configure时：</p>
<blockquote>
<p>checking Python.h usability<br>result: no<br>checking Python.h presence<br>result: no<br>checking for Python.h<br>result: no<br>error: cannot find usable Python headers</p>
</blockquote>
<p>但是诡异的是Python.h平躺在&#x2F;usr&#x2F;include&#x2F;python2.7&#x2F;下，并且configure脚本已经找到了这个路径。于是翻了下config.log，终于发现问题是：</p>
<blockquote>
<p>fatal error: asm&#x2F;errno.h: No such file or directory</p>
</blockquote>
<p>好吧，谁叫我没更新Ubuntu，又遇到这个老朋友了<a href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48879">Bug 48879 - Compilation cannot find file asm&#x2F;errno.h</a>。之后只管<code>./configure CFLAGS=&quot;-I /usr/include/i386-linux-gnu/&quot;</code>即可。</p>
<h2 id="第三方module加载失败"><a href="#第三方module加载失败" class="headerlink" title="第三方module加载失败"></a>第三方module加载失败</h2><p>在make, make install都顺利通过之后，决定打开ipython手工加载chancoding模块试试，结果在执行<code>import chancoding</code>时获得如下错误信息：</p>
<blockquote>
<p>libgnuradio-chancoding.so.0: cannot open shared object file: No such file or directory</p>
</blockquote>
<p>难道Python找不到<code>/usr/local/lib</code>这个路径吗…因为之前<code>./configure</code>的时候没有指定<code>--prefix</code>，那么module的安装路径就应该是<code>/usr/local/</code>当中，解决方法就是：</p>
<blockquote>
<p>export LD_LIBRARY_PATH&#x3D;”&#x2F;usr&#x2F;local&#x2F;lib”这一行加到<code>~/.bashrc </code>当中即可。</p>
</blockquote>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>python</tag>
        <tag>gnuradio</tag>
      </tags>
  </entry>
  <entry>
    <title>往beamer中添加高亮源代码</title>
    <url>/2011/05/01/%E5%BE%80beamer%E4%B8%AD%E6%B7%BB%E5%8A%A0%E9%AB%98%E4%BA%AE%E6%BA%90%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p>在ubuntu下使用highlight软件可以非常简单的高亮目标代码：</p>
<ul>
<li>安装highlight：<code>sudo apt-get install highlight</code></li>
<li>假如你有一个名叫<code>hello.c</code>的源文件，想要在一个tex文档中高亮显示它：<ol>
<li><code>highlight -T -i hello.c -o hello.tex</code></li>
<li>在<code>hello.c</code>所在路径下，将出现两个文件：<code>hello.tex</code>和<code>highlight.sty</code></li>
<li>把<code>highlight.sty</code>拷贝到你的tex源文件所在路径，在你的tex源文件的导言部分(Preamble)加入：<code>\input &#123;highlight.sty&#125;</code>，并把<code>hello.tex</code>中所有内容全部插入到tex文档中需要显示高亮代码的位置。</li>
</ol>
</li>
</ul>
<p>以上就是全部的步骤，下面是效果图：</p>
<div class="separator" style="clear: both; text-align: center;">[![](/img/frame_small.png)](/img/frame.png)</div><div>
</div>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>tex</tag>
        <tag>highlight</tag>
      </tags>
  </entry>
  <entry>
    <title>拯救你的配色才能拯救你的slides -- Adobe kuler</title>
    <url>/2012/01/28/%E6%8B%AF%E6%95%91%E4%BD%A0%E7%9A%84%E9%85%8D%E8%89%B2%E6%89%8D%E8%83%BD%E6%8B%AF%E6%95%91%E4%BD%A0%E7%9A%84slides-Adobe-kuler/</url>
    <content><![CDATA[<p>Adobe是一家伟大的公司，无数的产品总能带给大家惊喜，今天又一次认识到了这一点。刚刚在浏览BBS TeX版的这篇文章《<a href="http://bbs.seu.edu.cn/bbscon.php?bid=230&amp;id=3417">[ChinaTex]定制一个IPhone主题幻灯片</a>》的时候从说明文档中看到这样一句话：</p>
<blockquote>
<p>In  order to have colors that ﬁt together nicely, we recommend using a tool  for creating color palettes, e.g.,  <a href="http://kuler.adobe.com/#create/fromacolor">http://kuler.adobe.com/#create/fromacolor</a>.</p>
</blockquote>
<p>顺着链接进去转了一下，十分惊艳：</p>
<div class="separator" style="clear: both; text-align: center;">[![](/img/from_a_color_small.PNG)](/img/from_a_color.PNG)</div>

<p>在这个界面中，你可以指定一个规则，然后用鼠标在采色盘中调节<code>Base Color</code>，就能得到一个颜色集，总之调到你满意为止。不过我更倾向于kuler提供的另外一个选项，也就是其他设计师上传的配色方案：</p>
<div class="separator" style="clear: both; text-align: center;">[![](/img/most_popular_small.PNG)](/img/most_popular.PNG)</div>

<p>不懂平面设计的(比如我)，用这个会比较好，选得分高又顺眼的就对了。</p>
<p>btw：web和slides一样，丑陋的配色会吓走访问者，不过直接用开源的一些前端模板更省事一些，比如到这里去找：<a href="http://www.openwebdesign.org/">Open Web Design</a>。</p>
]]></content>
      <tags>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐一个简单方便的条形码识别库--ZBar</title>
    <url>/2010/05/10/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E6%96%B9%E4%BE%BF%E7%9A%84%E6%9D%A1%E5%BD%A2%E7%A0%81%E8%AF%86%E5%88%AB%E5%BA%93-ZBar/</url>
    <content><![CDATA[<p>最近莫名奇妙的突然突入到各式各样的领域中，比如生成条形码，识别条形码，编造、解析GPS帧格式，经纬度与直角坐标变换，小波变换求特征值，心电图数据查询…</p>
<p>然后觉得应该把这些东西记下来</p>
<p>What is ZBar?<br>ZBar is a bar code scanning and decoding library.</p>
<p>ZBar支持识别二维条形码，纯C实现(可选C++封装)，提供了C&#x2F;C++、python、perl语言的接口，可以用在iPhone上…</p>
<p>在官方wiki页面(<a href="http://sourceforge.net/apps/mediawiki/zbar/index.php?title=HOWTO:_Scan_images_using_the_API)%E6%9C%89%E8%AF%A6%E7%BB%86%E7%9A%84%E7%94%A8%E6%B3%95">http://sourceforge.net/apps/mediawiki/zbar/index.php?title=HOWTO:_Scan_images_using_the_API)有详细的用法</a></p>
<p>话说这个库什么都好，就是wiki里面提供的例子全是用的Magick++，用Windows平台+VC6的童鞋可能要郁闷了。</p>
<p>其实不用Magick++也是可以的，ZBar的文档说传给parser处理的图片的格式最好是Y800(<a href="http://fourcc.org/yuv.php#Y800)%E7%9A%84%EF%BC%8C%E4%BD%BF%E7%94%A8OpenCV%E7%9A%84%E5%87%BD%E6%95%B0cvCvtColor(cimg,gimg,CV_BGR2GRAY)%E4%B9%9F%E6%98%AF%E5%8F%AF%E4%BB%A5%E6%90%9E%E5%AE%9A%E7%9A%84%EF%BC%8C%E4%B8%8D%E7%9B%B8%E4%BF%A1%E7%9A%84%E7%AB%A5%E9%9E%8B%E5%8F%AF%E4%BB%A5%E5%8E%BB%E7%9C%8B%E7%9C%8B%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%87%E6%A1%A3%EF%BC%8C%E5%AF%B9%E6%AF%94%E4%B8%80%E4%B8%8BCV_BGR2GRAY%E7%94%9F%E6%88%90%E7%9A%84%E5%9B%BE%E5%83%8F%E6%98%AF%E4%B8%8D%E6%98%AF%E5%B0%B1%E6%98%AFY800%E6%A0%BC%E5%BC%8F">http://fourcc.org/yuv.php#Y800)的，使用OpenCV的函数cvCvtColor(cimg,gimg,CV_BGR2GRAY)也是可以搞定的，不相信的童鞋可以去看看这个函数的文档，对比一下CV_BGR2GRAY生成的图像是不是就是Y800格式</a></p>
<p>如果是在Linux下面，还是用Magick++比较好</p>
]]></content>
      <tags>
        <tag>barcode</tag>
      </tags>
  </entry>
  <entry>
    <title>生活在看不到星星的南京</title>
    <url>/2010/05/03/%E7%94%9F%E6%B4%BB%E5%9C%A8%E7%9C%8B%E4%B8%8D%E5%88%B0%E6%98%9F%E6%98%9F%E7%9A%84%E5%8D%97%E4%BA%AC/</url>
    <content><![CDATA[<p>RT，看完化物语才突然想起，原来来南京这么多年了，夜空总是见不着星星的。滑稽啊，紫荆山天文台</p>
<p>回想在家乡的时候满天的银河，清澈的河水，南京在自然环境方面真实烂透了。于是我只能每天面对我的20寸镜面屏</p>
<p>还是二次元好</p>
]]></content>
      <tags>
        <tag>others</tag>
      </tags>
  </entry>
  <entry>
    <title>用ubuntu做开发要做的第一件事</title>
    <url>/2010/05/03/%E7%94%A8ubuntu%E5%81%9A%E5%BC%80%E5%8F%91%E8%A6%81%E5%81%9A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%BB%B6%E4%BA%8B/</url>
    <content><![CDATA[<p>就是将&#x2F;bin&#x2F;sh重新指向&#x2F;bin&#x2F;bash。比较干净的步骤是依次执行如下三条命令:</p>
<blockquote>
<pre>sudo update-alternatives --install /bin/sh sh /bin/bash 40
sudo update-alternatives --install /bin/sh sh /bin/dash 30
sudo update-alternatives --config sh
</pre>
<p>然后按提示选择将sh重新指向bash即可</p>
</blockquote>
<p><strong>为什么要这么做？</strong><br>为了在编译各类源码包的时候不要遇见由于操蛋的dash而引发的各式各样稀奇古怪的错误**<br>**</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>自动安装gnuradio的脚本</title>
    <url>/2011/05/15/%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85gnuradio%E7%9A%84%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>首先埋汰一下Ubuntu自带的gnuradio版本，就算是在最新的测试版11.10上，gnuradio的版本也还是3.2.0，太旧了，以至于无法兼容USRP上的WBX之类的射频子板，运行时会出现如下错误：</p>
<blockquote>
<p>Warning: Treating daughterboard with invalid EEPROM contents as if it<br>were a “Basic Tx.”<br>Warning: This is almost certainly wrong…  Use appropriate<br>burn-*-eeprom utility.出现这个错误的根源是因为gnuradio 3.2.0版本中射频子板数据库中并没有WBX子板的ID(这个值是存储在各块子板的eeprom中)，解决的方法是更新到3.3.0版，或者直接从git源中安装gnuradio和uhd。通过Google，找到了一个安装脚本：<br><a href="http://www.sbrac.org/files/build-gnuradio">Build script for UHD+GnuRadio on Fedora and Ubuntu</a>感谢原作者Marcus Leech，不过这个脚本存在一些问题，里面在对很多重要命令的执行结果进行判断的时候使用的是“grep前一个命令的输出”这样的方式，所以当这个脚本运行在非英语locale的系统上时，会出现相当多的误判。我把这些检查方式换成了判断前一个命令结果的返回值，应该能够适用于各种locale设置的Fedora、Ubuntu系统，修改后的版本在这里：<a href="https://docs.google.com/leaf?id=0B3G77VEE7JciNWZmMGQyZjAtNjY5ZS00YTFjLWExNTItYjJlNWFmNjAzNmFj&amp;hl=zh_CN">gnuradio_build</a>(放在Google doc上了)，改动如下：</p>
</blockquote>
<div style="background-color: #333333; color: white; font-family: monospace;"><pre style="background-color: #333333; color: white; font-family: monospace;"><span class="Statement" style="color: khaki; font-weight: bold;">53,54c53,54</span>
<span class="Special" style="color: navajowhite;">&lt;     which $1 &gt;tmp$$ 2&gt;&amp;1</span>
<span class="Special" style="color: navajowhite;">&lt;     if grep -q no.${1}.in tmp$$</span>
<span class="Statement" style="color: khaki; font-weight: bold;">---</span>
<span class="Identifier" style="color: palegreen;">&gt;     which $1</span>
<span class="Identifier" style="color: palegreen;">&gt;     if [ $? -ne 0 ]</span>
<span class="Statement" style="color: khaki; font-weight: bold;">59d58</span>
<span class="Special" style="color: navajowhite;">&lt;         rm -f tmp$$</span>
<span class="Statement" style="color: khaki; font-weight: bold;">68d66</span>
<span class="Special" style="color: navajowhite;">&lt;         rm -f tmp$$</span>
<span class="Statement" style="color: khaki; font-weight: bold;">72d69</span>
<span class="Special" style="color: navajowhite;">&lt;     rm -f tmp$$</span>
<span class="Statement" style="color: khaki; font-weight: bold;">80c77</span>
<span class="Special" style="color: navajowhite;">&lt;         if grep -q "No such" tmp$$</span>
<span class="Statement" style="color: khaki; font-weight: bold;">---</span>
<span class="Identifier" style="color: palegreen;">&gt;         if [ $? -ne 0 ]</span>
<span class="Statement" style="color: khaki; font-weight: bold;">162c159</span>
<span class="Special" style="color: navajowhite;">&lt;         sudo apt-get remove 'gnuradio-*' &gt;/dev/null 2&gt;&amp;1</span>
<span class="Statement" style="color: khaki; font-weight: bold;">---</span>
<span class="Identifier" style="color: palegreen;">&gt;         sudo apt-get -y remove 'gnuradio-*' &gt;/dev/null 2&gt;&amp;1</span>
<span class="Statement" style="color: khaki; font-weight: bold;">214c211,218</span>
<span class="Special" style="color: navajowhite;">&lt;         sudo apt-get -y install $PKGLIST &gt;prereq.log 2&gt;&amp;1</span>
<span class="Statement" style="color: khaki; font-weight: bold;">---</span>
<span class="Identifier" style="color: palegreen;">&gt;         sudo apt-get -y install $PKGLIST  2&gt;&amp;1 | tee prereq.log</span>
<span class="Identifier" style="color: palegreen;">&gt;         if [ $? -ne 0 ]</span>
<span class="Identifier" style="color: palegreen;">&gt;         then</span>
<span class="Identifier" style="color: palegreen;">&gt;             echo Error occured during installing build dependency of gnuradio</span>
<span class="Identifier" style="color: palegreen;">&gt;             echo Please check your network setting and look prereq.log for details.</span>
<span class="Identifier" style="color: palegreen;">&gt;             more prereq.log</span>
<span class="Identifier" style="color: palegreen;">&gt;             exit</span>
<span class="Identifier" style="color: palegreen;">&gt;         fi</span>
<span class="Statement" style="color: khaki; font-weight: bold;">274c278</span>
<span class="Special" style="color: navajowhite;">&lt;     if [ ! -d gnuradio/gnuradio-core ]</span>
<span class="Statement" style="color: khaki; font-weight: bold;">---</span>
<span class="Identifier" style="color: palegreen;">&gt;     if [ $? -ne 0 ]</span>
<span class="Statement" style="color: khaki; font-weight: bold;">287c291</span>
<span class="Special" style="color: navajowhite;">&lt;     if [ ! -d uhd/host ]</span>
<span class="Statement" style="color: khaki; font-weight: bold;">---</span>
<span class="Identifier" style="color: palegreen;">&gt;     if [ $? -ne 0 ]</span></pre></div>]]></content>
      <tags>
        <tag>gnuradio</tag>
      </tags>
  </entry>
  <entry>
    <title>cin与getline</title>
    <url>/2011/04/18/cin%E4%B8%8Egetline/</url>
    <content><![CDATA[<p>初学C++的同学常常会遇到这样一个问题：如何从标准输入流中输入一个带有空格的句子？通过不断的Google或者翻书，往往会发现个&#96;&#96;getline’’这个全局函数，它可以从标准输入输出流中拿到一行，并且输入参数是string类型：</p>
<blockquote>
<p>istream&amp; getline ( istream&amp; is, string&amp; str, char delim );<br>istream&amp; getline ( istream&amp; is, string&amp; str );<br>不过一旦动手就会遇到一个新问题：cin &gt;&gt;和getline混用的时候会出错，比如：</p>
</blockquote>
<pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">01</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">...</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">02 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">int</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> var</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">03 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    string name</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">04 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">...</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">05 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    cin </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&gt;&gt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> var</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">06 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">getline</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">cin</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> name</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 12px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">07 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">...</span> </pre>运行之后，你会发现你只能输入一次，当你输入了``var''这个变量的值之后，``getline(cin, name)''这一行会被跳过，仿佛没有执行过一般，这是怎么回事？

<p>这里我们需要了解流提取操作符&#96;&#96;&gt;&gt;’’的一些特点，这个重载过的操作符的实现的功能顾名思义就是从输入缓冲中提取一个词，再将这个词转化为它后面的变量的类型，比如：<span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"></span></p>
<pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">01 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">#include <cstdlib></cstdlib></span></pre>
<pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">02 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">#include <iostream></iostream></span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">03 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">#include <string></string></span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">04 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">05 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">using namespace</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> std</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">06 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">07 </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">int</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">main</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">int</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> argc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">char</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">*</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">argv</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[] )</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">08 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">{</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">09 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    string str1</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">10 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    streamsize  size</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">11 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">// if you use Visual Studio, next line is unnecessary, comment it.</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">12 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    ios</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">::</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">sync_with_stdio</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">false</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">13 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">14 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    cout </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"Input : "</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">15 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    cin </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&gt;&gt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> str1</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">16 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">17 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    streambuf </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">*</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">pBuf </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> cin</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">rdbuf</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">();</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">18 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    size    </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> pBuf</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">in_avail</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">();</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">19 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">20 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    cout </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"Your input is : "</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> str1 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> endl</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">21 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    cout </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"There is still "</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> size </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">" chars in the buffer."</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">&lt;&lt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> endl</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">22 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">23 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">return</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> EXIT_SUCCESS</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 12px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">24 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">}</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">               </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">// ----------  end of function main  ----------</span> </pre>假如你在第15行的``cin &gt;&gt; str1''处输入了``Hello World!''，cin第一次只读入Hello，后面8个字符仍在输入缓冲中，所以第21行会输出``There is still 8 chars in the buffer.''。换句话说，``&gt;&gt;''读到下一个空白字符的前一个字符，不过它将空白字符留在输入缓冲中。

<p>也就是因为这一点，<code>getline&#39;&#39;和</code>&gt;&gt;’’混用的时候会有小摩擦，考虑本文的第一个例子，当在<code>cin &amp;gt;&amp;gt; var&#39;&#39;中输入3然后回车之后，`3&#39;作为数字被赋值给了</code>var’’，但是换行符被留在了输入缓冲中，&#96;&#96;getline(cin, name);’’在读入换行符之后就认为已经读到了一整行：</p>
<blockquote>
<p>Extracts characters from is and stores them into str until a delimitation character is found.</p>
<p>The delimiter character is delim for the first function version, and ‘\n’ (newline character) for the second. The extraction also stops if the end of file is reached in is or if some other error occurs during the input operation.</p>
<p>If the delimiter is found, it is extracted and discarded, i.e. it is not stored and the next input operation will begin after it.上面这一段是cplusplus上对getline函数的说明：<a href="http://www.cplusplus.com/reference/string/getline/%EF%BC%8C%E5%A4%A7%E6%84%8F%E5%B0%B1%E6%98%AF%E8%AF%B4%60%60getline''%E5%9C%A8%E8%BE%93%E5%85%A5%E7%BC%93%E5%86%B2%E8%AF%BB%E5%85%A5%E8%BE%93%E5%85%A5%E7%9A%84%E6%97%B6%E5%80%99%E6%98%AF%E4%BB%8E%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E5%BC%80%E5%A7%8B%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%86%8D%E8%AF%BB%E5%85%A5%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%B0%86%E6%8D%A2%E8%A1%8C%E7%AC%A6%E4%BB%8E%E8%BE%93%E5%85%A5%E7%BC%93%E5%86%B2%E4%B8%AD%E5%88%A0%E6%8E%89(%E8%BF%99%E4%B8%AA%E6%89%8D%E6%98%AF%E5%A5%BD%E7%9A%84%E8%A1%8C%E4%B8%BA%E5%95%8A)">http://www.cplusplus.com/reference/string/getline/，大意就是说``getline&#39;&#39;在输入缓冲读入输入的时候是从第一个字符开始，并且再读入之后，将换行符从输入缓冲中删掉(这个才是好的行为啊)</a></p>
</blockquote>
<p>由以上两点不难理解为什么跟在<code>&amp;gt;&amp;gt;&#39;&#39;之后的</code>getline’’会被跳掉，其实不是被跳掉，而是读了一个换行符&#96;\n’就收工了……</p>
<p>那么怎么解决呢？</p>
<ol>
<li>不要混用<code>cin&#39;&#39;和</code>getline’’；</li>
<li>在使用<code>cin&#39;&#39;之后调用</code>cin.ignore(256, ‘\n’)’’，将输入缓冲中的换行符清空掉……</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>让Python与C/C++协同工作 (1)</title>
    <url>/2010/05/19/%E8%AE%A9Python%E4%B8%8EC-C-%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C-1/</url>
    <content><![CDATA[<div style="color: black;"><span style="font-size: large;">用Python生成C/C++的数据</span></div>
Python语言简洁方便易于开发，用来快速的生成和处理数据最好不过了，所以用Python为C/C++生成测试数据在好不过了。但是由于两者在内部的数据存储方面有很大的不同，比如Python的内建类型的float就比C/C++的double要精确的多，所以如果要为C/C++生成二进制的数据(比如通过socket直接发送包含double数据的帧)，应该怎么做呢？

<p>其实Python的内建模块中，就至少有这两个是与C&#x2F;C++联系十分紧密的:</p>
<ul>
<li><a href="http://docs.python.org/library/ctypes.html">ctype</a>[A foreign function library for Python]</li>
<li><a href="http://docs.python.org/library/struct.html">struct</a>[Interpret strings as packed binary data]如果仅仅是生成数据，而不是想调用C&#x2F;C++的那一票函数的话(话说有Python在手，谁还想用那些难用的C&#x2F;C++函数)，用struct模块要更加方便一些。</li>
</ul>
<p>下面提供一个例子，比如想要生成一个RFC 959[File Transfer Protocol]中的某帧格式如下所示的帧</p>
<blockquote>
<pre>Byte string:

             1       7                8                     8
            +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+     +-+-+-+-+-+-+-+-+
            |0|       n     | |    d(1)       | ... |      d(n)     |
            +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+     +-+-+-+-+-+-+-+-+
                                          ^             ^
                                          |<span highlight="Search">---</span>n bytes<span highlight="Search">---</span>|
                                              of data</pre><div id="TixyyLink" style="background-color: transparent; border: medium none; color: black; overflow: hidden; text-align: left; text-decoration: none;">
<p>Read more: <a href="http://www.faqs.org/rfcs/rfc959.html#ixzz0oIozyqaI">http://www.faqs.org/rfcs/rfc959.html#ixzz0oIozyqaI</a></div><div id="TixyyLink" style="background-color: transparent; border: medium none; color: black; overflow: hidden; text-align: left; text-decoration: none;"></p>
</blockquote>
</div><div id="TixyyLink" style="background-color: transparent; border: medium none; color: black; overflow: hidden; text-align: left; text-decoration: none;">如何入手呢？很简单</div><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">01 </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># 用于C语言数据封装</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">02 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">from</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> struct </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">import</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">*</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">03 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">...</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">04 # 将要传输的数据，考虑到上面的帧格式，长度定义得比较短...</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">05 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">data </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"Hello World!"</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">06 # 为将要传输的数据准备一个buffer</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">07 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">buff </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">""</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">08 # 开始封装</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">09 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">buff </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">pack</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'!c'</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">chr</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">len</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">data</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)))</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">10 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">buff </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">pack</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'!%ds'</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">%</span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">len</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">data</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">),</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> data</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 12px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">11 # 封装完毕，直接发出去就可以了</span> </pre>在这个代码片段中，核心就是pack函数。而pack函数的核心是格式化字符串，这个东西和printf是差不多的。具体参数说明(引自[Python官方文档](http://docs.python.org/library/struct.html)):
<table border="1" class="docutils"><thead valign="bottom"><tr><th class="head">Format</th> <th class="head">C Type</th> <th class="head">Python</th> <th class="head">Notes</th> </tr></thead> <tbody valign="top"><tr><td><tt class="docutils literal"><span class="pre">x</span></tt></td> <td>pad byte</td> <td>no value</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">c</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">char</span></tt></td> <td>string of length 1</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">b</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">signed</span> <span class="pre">char</span></tt></td> <td>integer</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">B</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">unsigned</span> <span class="pre">char</span></tt></td> <td>integer</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">?</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">_Bool</span></tt></td> <td>bool</td> <td>(1)</td> </tr><tr><td><tt class="docutils literal"><span class="pre">h</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">short</span></tt></td> <td>integer</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">H</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">unsigned</span> <span class="pre">short</span></tt></td> <td>integer</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">i</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">int</span></tt></td> <td>integer</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">I</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">unsigned</span> <span class="pre">int</span></tt></td> <td>integer or long</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">l</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">long</span></tt></td> <td>integer</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">L</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">unsigned</span> <span class="pre">long</span></tt></td> <td>long</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">q</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">long</span> <span class="pre">long</span></tt></td> <td>long</td> <td>(2)</td> </tr><tr><td><tt class="docutils literal"><span class="pre">Q</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">unsigned</span> <span class="pre">long</span> <span class="pre">long</span></tt></td> <td>long</td> <td>(2)</td> </tr><tr><td><tt class="docutils literal"><span class="pre">f</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">float</span></tt></td> <td>float</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">d</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">double</span></tt></td> <td>float</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">s</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">char[]</span></tt></td> <td>string</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">p</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">char[]</span></tt></td> <td>string</td> <td>
</td> </tr><tr><td><tt class="docutils literal"><span class="pre">P</span></tt></td> <td><tt class="xref docutils literal"><span class="pre">void</span> <span class="pre">*</span></tt></td> <td>long</td> <td>
</td></tr></tbody></table>Notes:

<p>1.The ‘?’ conversion code corresponds to the _Bool type defined by C99. If this type is not available, it is simulated using a char. In standard mode, it is always represented by one byte.</p>
<p>New in version 2.6.</p>
<p>2.The ‘q’ and ‘Q’ conversion codes are available in native mode only if the platform C compiler supports C long long, or, on Windows, __int64. They are always available in standard modes.</p>
<p>New in version 2.2.</p>
<p>貌似字符串部分是可以用p取代繁琐的ns的(n表示的是字节数量，在上文中是len(data))。</p>
<p>然后一个需要关心的就是网络字节序的问题，这个也就是上文中pack函数中’!’字段的作用了(引自<a href="http://docs.python.org/library/struct.html">Python官方文档</a>):</p>
<table border="1" class="docutils"><thead valign="bottom"><tr><th class="head">Character</th> <th class="head">Byte order</th> <th class="head">Size and alignment</th> </tr></thead> <tbody valign="top"><tr><td><tt class="docutils literal"><span class="pre">@</span></tt></td> <td>native</td> <td>native</td> </tr><tr><td><tt class="docutils literal"><span class="pre">=</span></tt></td> <td>native</td> <td>standard</td> </tr><tr><td><tt class="docutils literal"><span class="pre">&lt;</span></tt></td> <td>little-endian</td> <td>standard</td> </tr><tr><td><tt class="docutils literal"><span class="pre">&gt;</span></tt></td> <td>big-endian</td> <td>standard</td> </tr><tr><td><tt class="docutils literal"><span class="pre">!</span></tt></td> <td>network (= big-endian)</td> <td>standard</td> </tr></tbody> </table>If the first character is not one of these, <tt class="docutils literal"><span class="pre">'@'</span></tt> is assumed.

<p>当然如果仅仅是本机调试的话，要注意的问题会少很多，比如字节序的问题就可以忽略。下面再提供一个double型pack的例子:</p>
<pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">01 </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># 用于C语言数据封装</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">02 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">from</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> struct </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">import</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">*</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">03 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">...</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">04 # 对一个时序列来一次fft</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">05 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">s </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">= [</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">1</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">2</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">3</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">4</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">5</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">6</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">7</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">8</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">]</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">06 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">so </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">fft</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">s</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">07 # 为将要传输的数据准备一个buffer</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">08 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">buff </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">""</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">09 # 开始封装</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">10 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">for</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> d </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">in</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> so</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">11 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    buff </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">pack</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'@dd'</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> d</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">real</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> d</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">imag</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 12px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">12 # 封装完毕，直接发出去就可以了</span> </pre>很简单!]]></content>
      <tags>
        <tag>C_C++</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>在GDI+中向位图(Bitmap)中输出字符串时如何防锯齿</title>
    <url>/2011/12/10/%E5%9C%A8GDI-%E4%B8%AD%E5%90%91%E4%BD%8D%E5%9B%BE-Bitmap-%E4%B8%AD%E8%BE%93%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%E5%A6%82%E4%BD%95%E9%98%B2%E9%94%AF%E9%BD%BF/</url>
    <content><![CDATA[<p>最近在用GDI+重写一个<a href="http://www.codeproject.com/KB/wtl/WTL_Oscilloscope.aspx">示波器控件</a>(Oscilloscope Control)，原因是这个控件是用WTL写的，无法兼容于MFC的主界面程序。期间看到一个使用GDI+的双缓冲(Double buffering)解决方案：<br><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"> </span></p>
<pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">01 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">RECT rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">02 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">this</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">GetClientRect</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">03 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">04 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Bitmap </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">bmp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">right</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">bottom</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> PixelFormat32bppARGB</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">05 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">*</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> graph </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> Graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">::</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">FromImage</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">bmp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">06 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">07 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Pen </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">pen</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">Color</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">));</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">08 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">SolidBrush </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">brush</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">Color</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">));</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">09 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">FontFamily </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">ff</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">L</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"微软雅黑"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">10 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Font </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">f</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">ff</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">28</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> FontStyleRegular</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> UnitPixel</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">11 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">PointF </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">pf</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">left</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">5</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">top</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">5</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">12 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">13 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">graph</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">DrawString</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">L</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"GDI+ 示例程序"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">, -</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">1</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">, &amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">f</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> pf</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">, &amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">brush</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">14 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">15 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Graphics </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">lpDrawItemStruct</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">hDC</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 12px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">16 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">DrawImage</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">bmp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span> </pre>也就是先在Bitmap中使用Graphics进行绘图，绘图完毕后再一次性绘制到HDC上。

<p>但是我发现设计到字符串的输出的时候，<strong>直接将字符串输出到HDC上</strong> 与<strong>先绘制到Bitmap上再使用DrawImage将Bitmap输出到HDC</strong> 这两种方法有非常大的差别，如下两图：</p>
<span id="more"></span>

<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;">[![](/img/original.png)](/img/original.png)</td></tr><tr><td class="tr-caption" style="text-align: center;">直接DrawString到HDC</td></tr></tbody></table><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;">[![](/img/beforeAntialias.png)](/img/beforeAntialias.png)</td></tr><tr><td class="tr-caption" style="text-align: center;">先Bitmap再DrawImage到HDC</td></tr></tbody></table><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"></div>
后者的锯齿严重，后来在stackoverflow.com上找到这个解决方案：[Antialiased text on transparent bitmap](http://stackoverflow.com/questions/1291061/antialiased-text-on-transparent-bitmap)。遂将代码修改为：
<pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">01 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;"></span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">RECT rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">;</span>
</pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">02 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">this</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">GetClientRect</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">03 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">04 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Bitmap </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">bmp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">right</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">bottom</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> PixelFormat32bppARGB</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">05 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">*</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> graph </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> Graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">::</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">FromImage</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">bmp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">06 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">07 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">08 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Pen </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">pen</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">Color</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">));</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">09 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">SolidBrush </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">brush</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">Color</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">255</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">));</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">10 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">FontFamily </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">ff</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">L</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"微软雅黑"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">11 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Font </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">f</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">ff</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">28</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> FontStyleRegular</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> UnitPixel</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">12 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">PointF </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">pf</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">left</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">5</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> rc</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">top</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">5</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">13 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">14 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">graph</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">SetTextRenderingHint</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">TextRenderingHintAntiAlias</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">15 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">graph</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">DrawString</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">L</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"GDI+ 示例程序"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">, -</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">1</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">, &amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">f</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> pf</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">, &amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">brush</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">16 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">17 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">Graphics </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">lpDrawItemStruct</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-&gt;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">hDC</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 12px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">18 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">graphics</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">DrawImage</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(&amp;</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">bmp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">);</span> </pre>效果有非常大的改观：
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;">[![](/img/afterAntialias.png)](/img/afterAntialias.png)</td></tr><tr><td class="tr-caption" style="text-align: center;">指定文本输出质量之后</td></tr></tbody></table>
]]></content>
      <tags>
        <tag>C_C++</tag>
        <tag>GDI+</tag>
      </tags>
  </entry>
  <entry>
    <title>[软件推荐]highlight</title>
    <url>/2011/05/01/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90-highlight/</url>
    <content><![CDATA[<p>顾名思义，这个软件是用来对源代码高亮处理的。以前用的是source-highlight这个GNU的正室，其它都挺好，就是支持的格式少了点，连verilog都不支持。然后发现了highlight这款软件，相见恨晚，操作与source-highlight相近，支持的语言和输出格式都要多得多。<div></p>
</div><div>不说话，直接上效果：</div><div><span class="Apple-style-span" style="font-family: 宋体; font-size: 14px; line-height: 16px;"><span class="f005" style="color: #e878e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">`timescale</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f005" style="color: #e878e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1ns/1ps</span>&nbsp;
<span class="Apple-style-span" style="color: #6fa8dc;"><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">////////////////////////////////////////////////////////////////////////////////</span>&nbsp;
//<span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">Description</span><span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">-</span><span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;qpsk_map:</span><span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">2&nbsp;bit&nbsp;--&gt;&nbsp;complex&nbsp;number</span>&nbsp;
//<span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">Author</span><span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">-</span><span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;PT</span>&nbsp;
//<span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">Date</span><span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp;&nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">-</span><span class="f007" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="f004" style="font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;5月 21&nbsp;2009</span>&nbsp;
////////////////////////////////////////////////////////////////////////////////&nbsp;</span>

<p><span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">module</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;</span><span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">qpsk_map</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">(data_in,&nbsp;I_out,&nbsp;Q_out);</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">parameter</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;NUM_WIDTH&nbsp; &nbsp; &nbsp; &nbsp;&#x3D;&nbsp;</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">14</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">;</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">parameter</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;POS_NUM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#x3D;&nbsp;</span><span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">14’b00001011011010</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">;</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">parameter</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;NEG_NUM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#x3D;&nbsp;</span><span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">14’b11110100100110</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">;</span>&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&#x2F;&#x2F;&nbsp;input&nbsp;port</span><br><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&#x2F;&#x2F;&nbsp;MSB</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&#x3D;&nbsp;data_in[0]</span><br><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&#x2F;&#x2F;&nbsp;LSB</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&#x3D;&nbsp;data_in[1]</span><br><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">input</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp;[</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">:</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">0</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">]&nbsp; &nbsp;data_in;</span></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&#x2F;&#x2F;&nbsp;output&nbsp;port</span>&nbsp;<br><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">output</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;[NUM_WIDTH-</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">:</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">0</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">]&nbsp;I_out;</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">output</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;[NUM_WIDTH-</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">:</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">0</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">]&nbsp;Q_out;</span>&nbsp;</p>
<p>&nbsp; &nbsp;&nbsp;<span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">assign</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;I_out&nbsp; &nbsp;&#x3D;&nbsp;(data_in[</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">]&nbsp;&#x3D;&#x3D;&nbsp;</span><span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1’b0</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">)&nbsp;?&nbsp;NEG_NUM&nbsp;:</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;(data_in[<span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">]&nbsp;&#x3D;&#x3D;&nbsp;</span><span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1’b1</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">)&nbsp;?&nbsp;POS_NUM&nbsp;:</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">14’b00000000000000</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">;</span>&nbsp;</p>
<p>&nbsp; &nbsp;&nbsp;<span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">assign</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">&nbsp;&nbsp;Q_out&nbsp; &nbsp;&#x3D;&nbsp;(data_in[</span><span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">0</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">]&nbsp;&#x3D;&#x3D;&nbsp;</span><span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1’b0</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">)&nbsp;?&nbsp;NEG_NUM&nbsp;:</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;(data_in[<span class="f004" style="color: #7478e8; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">0</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">]&nbsp;&#x3D;&#x3D;&nbsp;</span><span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">1’b1</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">)&nbsp;?&nbsp;POS_NUM&nbsp;:</span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="f002" style="color: #00b400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">14’b00000000000000</span><span class="f007" style="color: #303230; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">;</span>&nbsp;<br><span class="f003" style="color: #aeb400; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">endmodule</span>&nbsp;</span></div><div></p>
</div><div>软件支持的输出格式有： 
<span class="f009" style="color: #e80000; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">Output</span><span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp;</span></span><span class="f009" style="color: #e80000; font-family: 宋体, Verdana; font-size: 14px; font-style: normal; font-weight: normal; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 0px; padding-right: 0px; padding-top: 2px;">formats</span><span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-H,&nbsp;--html&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;HTML&nbsp;file&nbsp;(default)&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-A,&nbsp;--ansi&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;terminal&nbsp;output&nbsp;(16&nbsp;colours)&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-L,&nbsp;--latex&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;LaTeX&nbsp;file&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-M,&nbsp;--xterm256&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;terminal&nbsp;output&nbsp;(256&nbsp;colours)&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-R,&nbsp;--rtf&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;RTF&nbsp;file&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-T,&nbsp;--tex&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;TeX&nbsp;file&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-X,&nbsp;--xhtml&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;XHTML&nbsp;1.1&nbsp;file&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-Z,&nbsp;--xml&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;XML&nbsp;file&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp;-G,&nbsp;--svg&nbsp;</span></span>
<span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;generate&nbsp;SVG&nbsp;file&nbsp;(experimental)</span></span></div><div><span class="Apple-style-span" style="font-family: 宋体;"><span class="Apple-style-span" style="font-size: 14px; line-height: 16px;">
</span></span></div><div>输出的格式十分丰富，而且还有tex，事实上，我就是用这个东西来给我的tex文档插各种高亮代码的，下一篇post介绍如何往beamer中插高亮的代码。</div><div>
</div>补充一句，这个软件和``source-highlight''一样，我用的都是Linux版本的，不知道有没有Windows版本。]]></content>
      <tags>
        <tag>linux</tag>
        <tag>tex</tag>
        <tag>source-highlight</tag>
      </tags>
  </entry>
  <entry>
    <title>让Python和Matlab协同工作 (1)</title>
    <url>/2010/05/18/%E8%AE%A9Python%E5%92%8CMatlab%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C-1/</url>
    <content><![CDATA[<div style="color: black;">**<span style="font-size: large;">如何从Python中导出".mat"文件</span>**</div>
很多时候，需要将Python之中处理过的数据导出为.mat文件中的矩阵，供Matlab使用。这个时候可以使用scipy的sio模块，这个模块的全称是:File IO ([scipy.io](http://docs.scipy.org/doc/scipy/reference/io.html#module-scipy.io))。

<p>目前支持这些类型的文件的读写</p>
<ul>
<li>Matlab files(*.mat)</li>
<li>Matrix Market files(*.mtx)</li>
<li>WAV files(*.wav)</li>
<li>Arff files, arff is a simple file format which support numerical, string and data  values. It supports sparse data too, see <a href="http://weka.sourceforge.net/wekadoc/index.php/en:ARFF_%283.4.6">http://weka.sourceforge.net/wekadoc/index.php/en:ARFF_(3.4.6</a>) for more info. scipy.io对这个模块只支持读</li>
<li>NetCDF这里呼应标题，只讲如何存数据到Matlab中的数组，给一个例子吧<span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"> </span><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">01 </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># -*-   encoding : utf8   -*-</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">02 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">import</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> os</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">03 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">import</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> scipy</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">io </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">as</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> sio</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">04 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">from</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> wfdbtools </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">import</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> rdsamp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> rdann</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">05 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">06 # 为了处理命令行选项</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">07 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">from</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> optparse </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">import</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> OptionParser</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">08 # 命令行选项</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">09 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">parser  </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">OptionParser</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">version</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"%prog 0.1"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">10 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">                       usage</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"python %prog [options]"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">11 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">12 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">parser</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">add_option</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"-i"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"--in"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> action</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"store"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> \</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">13 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        dest</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"IN"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> \</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">14 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        default</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"All/106"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> \</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">15 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">help</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"whether output binary frames into file."</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">16 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">17 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">parser</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">add_option</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"-s"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"--start"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> action</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"store"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">18 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">type</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"int"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> dest</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"START"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">19 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        default</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"0"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> \</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">20 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">help</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"start time [default=0]"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">21 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">22 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">parser</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">add_option</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"-e"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"--end"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> action</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"store"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">23 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">type</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"int"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> dest</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"END"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">24 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        default</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"-1"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">25 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">help</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"end time [default=-1]"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">26 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">27 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">parser</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">add_option</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"-o"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"--out"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> action</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"store"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">28 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">type</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"string"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> dest</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"OUT"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">29 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        default</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"Data.mat"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">\</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">30 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">help</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"output file name [default=Data.mat]"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">31 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">32 </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> args</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">) =</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> parser</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">parse_args</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">()</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">33 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">34 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">def</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">main</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">():</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">35 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'''</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">36 </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">        idiot comment</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">37 </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">    '''</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">38 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># read data from sample files</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">39 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    data</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> info </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">rdsamp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">IN</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">START</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">END</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">40 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    ann </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">rdann</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">IN</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'atr'</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">START</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">END</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">41 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    start   </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">int</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">data</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">])</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">42 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    p       </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">43 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># list of NOR points</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">44 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    ln  </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">list</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">()</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">45 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># list of PVC points</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">46 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    lp  </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">list</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">()</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">47 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">for</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> d </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">in</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> ann</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">48 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        p </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">int</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">d</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">0</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">]) -</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> start</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">49 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">if</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">int</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">d</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">2</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">]) ==</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">5</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">50 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">            lp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">append</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">data</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">p</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">36</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">p</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">55</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">2</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">])</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">51 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">elif</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">int</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">d</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">2</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">]) ==</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">1</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">52 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">            ln</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">append</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">data</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">p</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">-</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">36</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">p</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">55</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #4580b4; font-family: 'Consolas'; font-size: 10pt;">2</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">])</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">53 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># write data to mat file</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">54 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    l_dic   </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">dict</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">()</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">55 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">for</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> i </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">in</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">range</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">len</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">lp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)):</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">56 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        l_dic</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"PVC"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">str</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">i</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)] =</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> lp</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">i</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">]</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">57 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">for</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> i </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">in</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">range</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">len</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">ln</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)):</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">58 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">        l_dic</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"NOR"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #0490e8; font-family: 'Consolas'; font-size: 10pt; font-weight: 600;">str</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">i</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)] =</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> ln</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">[</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">i</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">]</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">59 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;"># write ann</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">60 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    sio</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">savemat</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"ANN_"</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">+</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">OUT</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">, {</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'ANN'</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">ann</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">},</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> oned_as</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'column'</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">61 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    sio</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">savemat</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">(</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">options</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">.</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">OUT</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> l_dic</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">,</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> oned_as</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">=</span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">'row'</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">)</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">62 </span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">63 </span><span style="color: #fca8ad; font-family: 'Consolas'; font-size: 10pt;">if</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> __name__ </span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">==</span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;"> </span><span style="color: #5c78f0; font-family: 'Consolas'; font-size: 10pt;">"__main__"</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">:</span></pre><pre style="-qt-block-indent: 0; background-color: #11121a; margin-bottom: 12px; margin-left: 0px; margin-right: 0px; margin-top: 0px; text-indent: 0px;"><span style="color: #349d58; font-family: 'Consolas'; font-size: 10pt;">64 </span><span style="color: #a0b4e0; font-family: 'Consolas'; font-size: 10pt;">    </span><span style="color: #b4e09f; font-family: 'Consolas'; font-size: 10pt;">main</span><span style="color: #b0b0b0; font-family: 'Consolas'; font-size: 10pt;">()</span> </pre>这个例子是从MIT-BIT数据库中把数据倒出为mat文件中的数组的，其实只要关注带有sio.savemat函数的那两行(<span style="color: red;">60</span>和<span style="color: red;">61</span>两行)，这个函数的用途在于可以吧Python中的dict数据存入到mat文件中。</li>
</ul>
<p>它的第一个参数是输出的mat文件的文件名(带扩展名)，第二个参数是将要被存储的dict数据，第三个参数有两个可选的选项”row”和”column”，也就是对一维的数据(比如list)是为mat文件中的1<em>N矩阵还是N</em>1矩阵。</p>
<p><strong><span style="font-size: large;">如何在Python中读入”.mat”文件</span></strong> </p>
<p>如上文所说，这个时候你也需要scipy.io，不同的是，调用loadmat函数而已。详细使用方法请参见: <a href="http://docs.scipy.org/doc/scipy/reference/generated/scipy.io.loadmat.html#scipy.io.loadmat">scipy.io.loadmat</a></p>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
</search>
